# Makefile.in generated by automake 1.15.1 from Makefile.am.
# libraries/bisonbiogeme/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am
# libraries/bisonBiogeme



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/biogeme
pkgincludedir = $(includedir)/biogeme
pkglibdir = $(libdir)/biogeme
pkglibexecdir = $(libexecdir)/biogeme
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin17.4.0
host_triplet = x86_64-apple-darwin17.4.0
subdir = libraries/bisonbiogeme
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libbisonbiogeme_a_AR = $(AR) $(ARFLAGS)
libbisonbiogeme_a_LIBADD =
am__libbisonbiogeme_a_SOURCES_DIST = patSpecParser.yy \
	patSpecScanner.ll patBisonSingletonFactory.cc \
	patAdditiveUtility.cc patAggregateObservationData.cc \
	patArithAbs.cc patArithAnd.cc patArithAttribute.cc \
	patArithBinaryMinus.cc patArithBinaryPlus.cc \
	patArithConstant.cc patArithDeriv.cc patArithDivide.cc \
	patArithEqual.cc patArithExp.cc patArithGreater.cc \
	patArithGreaterEqual.cc patArithInt.cc patArithLess.cc \
	patArithLessEqual.cc patArithLog.cc patArithMax.cc \
	patArithMin.cc patArithMod.cc patArithMult.cc patArithNode.cc \
	patArithNormalRandom.cc patArithNot.cc patArithNotEqual.cc \
	patArithOr.cc patArithPower.cc patArithRandom.cc \
	patArithSqrt.cc patArithUnaryMinus.cc patArithUnifRandom.cc \
	patArithVariable.cc patArrayIterator.cc \
	patAttributeNamesIterator.cc patBetaLikeIterator.cc \
	patBetaLikeParameter.cc patBiogeme.cc \
	patBiogemeIterationBackup.cc patBiogemeScripting.cc patCNL.cc \
	patCnlAlphaIterator.cc patConstraintNestIterator.cc \
	patDataFile.cc patDataFileAggObsIterator.cc \
	patDataFileIndIterator.cc patDataFileObsIterator.cc \
	patDataMemory.cc patDiscreteParameterIterator.cc \
	patDiscreteParameterProba.cc patEstimationResult.cc \
	patFastBiogeme.cc patFileIterator.cc \
	patFullCnlAlphaIterator.cc patGEV.cc patGeneralizedUtility.cc \
	patIndividualData.cc patLegendre.cc patLikelihood.cc \
	patLinearConstraint.cc patLinearUtility.cc \
	patMaxLikeProblem.cc patMemoryObsNoPanelIterator.cc \
	patMemoryObservationIterator.cc patMinimizedFunction.cc \
	patModelSpec.cc patModelSpecCtd.cc patNL.cc \
	patNetworkAlphaIterator.cc patNetworkGevAlt.cc \
	patNetworkGevIterator.cc patNetworkGevModel.cc \
	patNetworkGevNest.cc patNetworkGevNode.cc patNlNestIterator.cc \
	patNonLinearConstraint.cc patObservationData.cc \
	patOneZhengFosgerau.cc patProbaGevModel.cc \
	patProbaGevPanelModel.cc patProbaMnlModel.cc \
	patProbaMnlPanelModel.cc patProbaModel.cc \
	patProbaOrdinalLogit.cc patProbaPanelModel.cc \
	patProbaProbitModel.cc patPythonResults.cc \
	patRandomParameter.cc patSample.cc patSampleEnuGetIndices.cc \
	patSampleEnumeration.cc patSecondDerivatives.cc \
	patSimBasedMaxLikeOptimization.cc patTestNormal.cc \
	patUsedAttributeNamesIterator.cc patUtility.cc \
	patValueVariables.cc patZhengFosgerau.cc patZhengTest.cc \
	patBisonSingletonFactory.h patAdditiveUtility.h \
	patAggregateObservationData.h patAlternative.h patArithAbs.h \
	patArithAnd.h patArithAttribute.h patArithBinaryMinus.h \
	patArithBinaryPlus.h patArithConstant.h patArithDeriv.h \
	patArithDivide.h patArithEqual.h patArithExp.h \
	patArithGreater.h patArithGreaterEqual.h patArithInt.h \
	patArithLess.h patArithLessEqual.h patArithLog.h patArithMax.h \
	patArithMin.h patArithMod.h patArithMult.h patArithNode.h \
	patArithNormalRandom.h patArithNot.h patArithNotEqual.h \
	patArithOr.h patArithPower.h patArithRandom.h patArithSqrt.h \
	patArithUnaryMinus.h patArithUnifRandom.h patArithVariable.h \
	patArrayIterator.h patAttributeNamesIterator.h \
	patBetaLikeIterator.h patBetaLikeParameter.h patBiogeme.h \
	patBiogemeIterationBackup.h patBiogemeScripting.h patCNL.h \
	patCnlAlphaIterator.h patCnlAlphaParameter.h \
	patConstraintNestIterator.h patDataFile.h \
	patDataFileAggObsIterator.h patDataFileIndIterator.h \
	patDataFileObsIterator.h patDataMemory.h patDataStorage.h \
	patDiscreteParameter.h patDiscreteParameterIterator.h \
	patDiscreteParameterProba.h patDistribType.h \
	patEstimationResult.h patFastBiogeme.h patFileIterator.h \
	patFullCnlAlphaIterator.h patGEV.h patGeneralizedUtility.h \
	patIndividualData.h patLegendre.h patLikelihood.h \
	patLinearConstraint.h patLinearUtility.h patMaxLikeProblem.h \
	patMemoryObsNoPanelIterator.h patMemoryObservationIterator.h \
	patMinimizedFunction.h patModelSpec.h patModelSpecCtd.h \
	patNL.h patNetworkAlphaIterator.h patNetworkGevAlt.h \
	patNetworkGevIterator.h patNetworkGevLinkParameter.h \
	patNetworkGevModel.h patNetworkGevNest.h patNetworkGevNode.h \
	patNlNestDefinition.h patNlNestIterator.h \
	patNonLinearConstraint.h patObservationData.h \
	patOneZhengFosgerau.h patProbaGevModel.h \
	patProbaGevPanelModel.h patProbaMnlModel.h \
	patProbaMnlPanelModel.h patProbaModel.h patProbaOrdinalLogit.h \
	patProbaPanelModel.h patProbaProbitModel.h patPythonResults.h \
	patRandomDraws.h patRandomParameter.h patSample.h \
	patSampleEnuGetIndices.h patSampleEnumeration.h \
	patSecondDerivatives.h patSimBasedMaxLikeOptimization.h \
	patTestNormal.h patUsedAttributeNamesIterator.h patUtility.h \
	patValueVariables.h patZhengFosgerau.h patZhengTest.h
am__objects_1 = libbisonbiogeme_a-patSpecParser.$(OBJEXT) \
	libbisonbiogeme_a-patSpecScanner.$(OBJEXT) \
	libbisonbiogeme_a-patBisonSingletonFactory.$(OBJEXT) \
	libbisonbiogeme_a-patAdditiveUtility.$(OBJEXT) \
	libbisonbiogeme_a-patAggregateObservationData.$(OBJEXT) \
	libbisonbiogeme_a-patArithAbs.$(OBJEXT) \
	libbisonbiogeme_a-patArithAnd.$(OBJEXT) \
	libbisonbiogeme_a-patArithAttribute.$(OBJEXT) \
	libbisonbiogeme_a-patArithBinaryMinus.$(OBJEXT) \
	libbisonbiogeme_a-patArithBinaryPlus.$(OBJEXT) \
	libbisonbiogeme_a-patArithConstant.$(OBJEXT) \
	libbisonbiogeme_a-patArithDeriv.$(OBJEXT) \
	libbisonbiogeme_a-patArithDivide.$(OBJEXT) \
	libbisonbiogeme_a-patArithEqual.$(OBJEXT) \
	libbisonbiogeme_a-patArithExp.$(OBJEXT) \
	libbisonbiogeme_a-patArithGreater.$(OBJEXT) \
	libbisonbiogeme_a-patArithGreaterEqual.$(OBJEXT) \
	libbisonbiogeme_a-patArithInt.$(OBJEXT) \
	libbisonbiogeme_a-patArithLess.$(OBJEXT) \
	libbisonbiogeme_a-patArithLessEqual.$(OBJEXT) \
	libbisonbiogeme_a-patArithLog.$(OBJEXT) \
	libbisonbiogeme_a-patArithMax.$(OBJEXT) \
	libbisonbiogeme_a-patArithMin.$(OBJEXT) \
	libbisonbiogeme_a-patArithMod.$(OBJEXT) \
	libbisonbiogeme_a-patArithMult.$(OBJEXT) \
	libbisonbiogeme_a-patArithNode.$(OBJEXT) \
	libbisonbiogeme_a-patArithNormalRandom.$(OBJEXT) \
	libbisonbiogeme_a-patArithNot.$(OBJEXT) \
	libbisonbiogeme_a-patArithNotEqual.$(OBJEXT) \
	libbisonbiogeme_a-patArithOr.$(OBJEXT) \
	libbisonbiogeme_a-patArithPower.$(OBJEXT) \
	libbisonbiogeme_a-patArithRandom.$(OBJEXT) \
	libbisonbiogeme_a-patArithSqrt.$(OBJEXT) \
	libbisonbiogeme_a-patArithUnaryMinus.$(OBJEXT) \
	libbisonbiogeme_a-patArithUnifRandom.$(OBJEXT) \
	libbisonbiogeme_a-patArithVariable.$(OBJEXT) \
	libbisonbiogeme_a-patArrayIterator.$(OBJEXT) \
	libbisonbiogeme_a-patAttributeNamesIterator.$(OBJEXT) \
	libbisonbiogeme_a-patBetaLikeIterator.$(OBJEXT) \
	libbisonbiogeme_a-patBetaLikeParameter.$(OBJEXT) \
	libbisonbiogeme_a-patBiogeme.$(OBJEXT) \
	libbisonbiogeme_a-patBiogemeIterationBackup.$(OBJEXT) \
	libbisonbiogeme_a-patBiogemeScripting.$(OBJEXT) \
	libbisonbiogeme_a-patCNL.$(OBJEXT) \
	libbisonbiogeme_a-patCnlAlphaIterator.$(OBJEXT) \
	libbisonbiogeme_a-patConstraintNestIterator.$(OBJEXT) \
	libbisonbiogeme_a-patDataFile.$(OBJEXT) \
	libbisonbiogeme_a-patDataFileAggObsIterator.$(OBJEXT) \
	libbisonbiogeme_a-patDataFileIndIterator.$(OBJEXT) \
	libbisonbiogeme_a-patDataFileObsIterator.$(OBJEXT) \
	libbisonbiogeme_a-patDataMemory.$(OBJEXT) \
	libbisonbiogeme_a-patDiscreteParameterIterator.$(OBJEXT) \
	libbisonbiogeme_a-patDiscreteParameterProba.$(OBJEXT) \
	libbisonbiogeme_a-patEstimationResult.$(OBJEXT) \
	libbisonbiogeme_a-patFastBiogeme.$(OBJEXT) \
	libbisonbiogeme_a-patFileIterator.$(OBJEXT) \
	libbisonbiogeme_a-patFullCnlAlphaIterator.$(OBJEXT) \
	libbisonbiogeme_a-patGEV.$(OBJEXT) \
	libbisonbiogeme_a-patGeneralizedUtility.$(OBJEXT) \
	libbisonbiogeme_a-patIndividualData.$(OBJEXT) \
	libbisonbiogeme_a-patLegendre.$(OBJEXT) \
	libbisonbiogeme_a-patLikelihood.$(OBJEXT) \
	libbisonbiogeme_a-patLinearConstraint.$(OBJEXT) \
	libbisonbiogeme_a-patLinearUtility.$(OBJEXT) \
	libbisonbiogeme_a-patMaxLikeProblem.$(OBJEXT) \
	libbisonbiogeme_a-patMemoryObsNoPanelIterator.$(OBJEXT) \
	libbisonbiogeme_a-patMemoryObservationIterator.$(OBJEXT) \
	libbisonbiogeme_a-patMinimizedFunction.$(OBJEXT) \
	libbisonbiogeme_a-patModelSpec.$(OBJEXT) \
	libbisonbiogeme_a-patModelSpecCtd.$(OBJEXT) \
	libbisonbiogeme_a-patNL.$(OBJEXT) \
	libbisonbiogeme_a-patNetworkAlphaIterator.$(OBJEXT) \
	libbisonbiogeme_a-patNetworkGevAlt.$(OBJEXT) \
	libbisonbiogeme_a-patNetworkGevIterator.$(OBJEXT) \
	libbisonbiogeme_a-patNetworkGevModel.$(OBJEXT) \
	libbisonbiogeme_a-patNetworkGevNest.$(OBJEXT) \
	libbisonbiogeme_a-patNetworkGevNode.$(OBJEXT) \
	libbisonbiogeme_a-patNlNestIterator.$(OBJEXT) \
	libbisonbiogeme_a-patNonLinearConstraint.$(OBJEXT) \
	libbisonbiogeme_a-patObservationData.$(OBJEXT) \
	libbisonbiogeme_a-patOneZhengFosgerau.$(OBJEXT) \
	libbisonbiogeme_a-patProbaGevModel.$(OBJEXT) \
	libbisonbiogeme_a-patProbaGevPanelModel.$(OBJEXT) \
	libbisonbiogeme_a-patProbaMnlModel.$(OBJEXT) \
	libbisonbiogeme_a-patProbaMnlPanelModel.$(OBJEXT) \
	libbisonbiogeme_a-patProbaModel.$(OBJEXT) \
	libbisonbiogeme_a-patProbaOrdinalLogit.$(OBJEXT) \
	libbisonbiogeme_a-patProbaPanelModel.$(OBJEXT) \
	libbisonbiogeme_a-patProbaProbitModel.$(OBJEXT) \
	libbisonbiogeme_a-patPythonResults.$(OBJEXT) \
	libbisonbiogeme_a-patRandomParameter.$(OBJEXT) \
	libbisonbiogeme_a-patSample.$(OBJEXT) \
	libbisonbiogeme_a-patSampleEnuGetIndices.$(OBJEXT) \
	libbisonbiogeme_a-patSampleEnumeration.$(OBJEXT) \
	libbisonbiogeme_a-patSecondDerivatives.$(OBJEXT) \
	libbisonbiogeme_a-patSimBasedMaxLikeOptimization.$(OBJEXT) \
	libbisonbiogeme_a-patTestNormal.$(OBJEXT) \
	libbisonbiogeme_a-patUsedAttributeNamesIterator.$(OBJEXT) \
	libbisonbiogeme_a-patUtility.$(OBJEXT) \
	libbisonbiogeme_a-patValueVariables.$(OBJEXT) \
	libbisonbiogeme_a-patZhengFosgerau.$(OBJEXT) \
	libbisonbiogeme_a-patZhengTest.$(OBJEXT)
#am_libbisonbiogeme_a_OBJECTS =  \
#	$(am__objects_1)
libbisonbiogeme_a_OBJECTS = $(am_libbisonbiogeme_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbisonbiogeme_la_LIBADD =
am_libbisonbiogeme_la_OBJECTS = libbisonbiogeme_la-patSpecParser.lo \
	libbisonbiogeme_la-patSpecScanner.lo \
	libbisonbiogeme_la-patBisonSingletonFactory.lo \
	libbisonbiogeme_la-patAdditiveUtility.lo \
	libbisonbiogeme_la-patAggregateObservationData.lo \
	libbisonbiogeme_la-patArithAbs.lo \
	libbisonbiogeme_la-patArithAnd.lo \
	libbisonbiogeme_la-patArithAttribute.lo \
	libbisonbiogeme_la-patArithBinaryMinus.lo \
	libbisonbiogeme_la-patArithBinaryPlus.lo \
	libbisonbiogeme_la-patArithConstant.lo \
	libbisonbiogeme_la-patArithDeriv.lo \
	libbisonbiogeme_la-patArithDivide.lo \
	libbisonbiogeme_la-patArithEqual.lo \
	libbisonbiogeme_la-patArithExp.lo \
	libbisonbiogeme_la-patArithGreater.lo \
	libbisonbiogeme_la-patArithGreaterEqual.lo \
	libbisonbiogeme_la-patArithInt.lo \
	libbisonbiogeme_la-patArithLess.lo \
	libbisonbiogeme_la-patArithLessEqual.lo \
	libbisonbiogeme_la-patArithLog.lo \
	libbisonbiogeme_la-patArithMax.lo \
	libbisonbiogeme_la-patArithMin.lo \
	libbisonbiogeme_la-patArithMod.lo \
	libbisonbiogeme_la-patArithMult.lo \
	libbisonbiogeme_la-patArithNode.lo \
	libbisonbiogeme_la-patArithNormalRandom.lo \
	libbisonbiogeme_la-patArithNot.lo \
	libbisonbiogeme_la-patArithNotEqual.lo \
	libbisonbiogeme_la-patArithOr.lo \
	libbisonbiogeme_la-patArithPower.lo \
	libbisonbiogeme_la-patArithRandom.lo \
	libbisonbiogeme_la-patArithSqrt.lo \
	libbisonbiogeme_la-patArithUnaryMinus.lo \
	libbisonbiogeme_la-patArithUnifRandom.lo \
	libbisonbiogeme_la-patArithVariable.lo \
	libbisonbiogeme_la-patArrayIterator.lo \
	libbisonbiogeme_la-patAttributeNamesIterator.lo \
	libbisonbiogeme_la-patBetaLikeIterator.lo \
	libbisonbiogeme_la-patBetaLikeParameter.lo \
	libbisonbiogeme_la-patBiogeme.lo \
	libbisonbiogeme_la-patBiogemeIterationBackup.lo \
	libbisonbiogeme_la-patBiogemeScripting.lo \
	libbisonbiogeme_la-patCNL.lo \
	libbisonbiogeme_la-patCnlAlphaIterator.lo \
	libbisonbiogeme_la-patConstraintNestIterator.lo \
	libbisonbiogeme_la-patDataFile.lo \
	libbisonbiogeme_la-patDataFileAggObsIterator.lo \
	libbisonbiogeme_la-patDataFileIndIterator.lo \
	libbisonbiogeme_la-patDataFileObsIterator.lo \
	libbisonbiogeme_la-patDataMemory.lo \
	libbisonbiogeme_la-patDiscreteParameterIterator.lo \
	libbisonbiogeme_la-patDiscreteParameterProba.lo \
	libbisonbiogeme_la-patEstimationResult.lo \
	libbisonbiogeme_la-patFastBiogeme.lo \
	libbisonbiogeme_la-patFileIterator.lo \
	libbisonbiogeme_la-patFullCnlAlphaIterator.lo \
	libbisonbiogeme_la-patGEV.lo \
	libbisonbiogeme_la-patGeneralizedUtility.lo \
	libbisonbiogeme_la-patIndividualData.lo \
	libbisonbiogeme_la-patLegendre.lo \
	libbisonbiogeme_la-patLikelihood.lo \
	libbisonbiogeme_la-patLinearConstraint.lo \
	libbisonbiogeme_la-patLinearUtility.lo \
	libbisonbiogeme_la-patMaxLikeProblem.lo \
	libbisonbiogeme_la-patMemoryObsNoPanelIterator.lo \
	libbisonbiogeme_la-patMemoryObservationIterator.lo \
	libbisonbiogeme_la-patMinimizedFunction.lo \
	libbisonbiogeme_la-patModelSpec.lo \
	libbisonbiogeme_la-patModelSpecCtd.lo \
	libbisonbiogeme_la-patNL.lo \
	libbisonbiogeme_la-patNetworkAlphaIterator.lo \
	libbisonbiogeme_la-patNetworkGevAlt.lo \
	libbisonbiogeme_la-patNetworkGevIterator.lo \
	libbisonbiogeme_la-patNetworkGevModel.lo \
	libbisonbiogeme_la-patNetworkGevNest.lo \
	libbisonbiogeme_la-patNetworkGevNode.lo \
	libbisonbiogeme_la-patNlNestIterator.lo \
	libbisonbiogeme_la-patNonLinearConstraint.lo \
	libbisonbiogeme_la-patObservationData.lo \
	libbisonbiogeme_la-patOneZhengFosgerau.lo \
	libbisonbiogeme_la-patProbaGevModel.lo \
	libbisonbiogeme_la-patProbaGevPanelModel.lo \
	libbisonbiogeme_la-patProbaMnlModel.lo \
	libbisonbiogeme_la-patProbaMnlPanelModel.lo \
	libbisonbiogeme_la-patProbaModel.lo \
	libbisonbiogeme_la-patProbaOrdinalLogit.lo \
	libbisonbiogeme_la-patProbaPanelModel.lo \
	libbisonbiogeme_la-patProbaProbitModel.lo \
	libbisonbiogeme_la-patPythonResults.lo \
	libbisonbiogeme_la-patRandomParameter.lo \
	libbisonbiogeme_la-patSample.lo \
	libbisonbiogeme_la-patSampleEnuGetIndices.lo \
	libbisonbiogeme_la-patSampleEnumeration.lo \
	libbisonbiogeme_la-patSecondDerivatives.lo \
	libbisonbiogeme_la-patSimBasedMaxLikeOptimization.lo \
	libbisonbiogeme_la-patTestNormal.lo \
	libbisonbiogeme_la-patUsedAttributeNamesIterator.lo \
	libbisonbiogeme_la-patUtility.lo \
	libbisonbiogeme_la-patValueVariables.lo \
	libbisonbiogeme_la-patZhengFosgerau.lo \
	libbisonbiogeme_la-patZhengTest.lo
libbisonbiogeme_la_OBJECTS = $(am_libbisonbiogeme_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libbisonbiogeme_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libbisonbiogeme_la_rpath =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libbisonbiogeme_a_SOURCES) $(libbisonbiogeme_la_SOURCES)
DIST_SOURCES = $(am__libbisonbiogeme_a_SOURCES_DIST) \
	$(libbisonbiogeme_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/ylwrap \
	patSpecParser.cc patSpecParser.hh patSpecScanner.cc
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CXXFLAGS =  -std=gnu++11 -O3
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS =  -no-undefined -shared
AR = ar
AUTOCONF = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing autoconf
AUTOHEADER = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing autoheader
AUTOMAKE = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing automake-1.15
AWK = awk
BISON = bison++
CC = gcc
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FLEX = /usr/bin/flex++
GREP = /usr/bin/grep
GTK_CFLAGS = -D_REENTRANT -I/usr/local/Cellar/gtkmm3/3.22.2/include/gtkmm-3.0 -I/usr/local/Cellar/gtkmm3/3.22.2/lib/gtkmm-3.0/include -I/usr/local/Cellar/atkmm/2.24.2/include/atkmm-1.6 -I/usr/local/Cellar/gtk+3/3.22.26/include/gtk-3.0/unix-print -I/usr/local/Cellar/gtkmm3/3.22.2/include/gdkmm-3.0 -I/usr/local/Cellar/gtkmm3/3.22.2/lib/gdkmm-3.0/include -I/usr/local/Cellar/glibmm/2.54.1/include/giomm-2.4 -I/usr/local/Cellar/glibmm/2.54.1/lib/giomm-2.4/include -I/usr/local/Cellar/pangomm/2.40.1/include/pangomm-1.4 -I/usr/local/Cellar/pangomm/2.40.1/lib/pangomm-1.4/include -I/usr/local/Cellar/glibmm/2.54.1/include/glibmm-2.4 -I/usr/local/Cellar/glibmm/2.54.1/lib/glibmm-2.4/include -I/usr/local/Cellar/gtk+3/3.22.26/include/gtk-3.0 -I/usr/local/Cellar/glib/2.54.3/include/gio-unix-2.0/ -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/libepoxy/1.4.3/include -I/usr/local/Cellar/pango/1.40.14/include/pango-1.0 -I/usr/local/Cellar/harfbuzz/1.7.5/include/harfbuzz -I/usr/local/Cellar/graphite2/1.3.10/include -I/usr/local/Cellar/pango/1.40.14/include/pango-1.0 -I/usr/local/Cellar/atk/2.26.1/include/atk-1.0 -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/cairomm/1.12.2/include/cairomm-1.0 -I/usr/local/Cellar/cairomm/1.12.2/lib/cairomm-1.0/include -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/pixman/0.34.0_1/include/pixman-1 -I/usr/local/Cellar/fontconfig/2.12.6/include -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/libpng/1.6.34/include/libpng16 -I/usr/local/Cellar/libsigc++/2.10.0/include/sigc++-2.0 -I/usr/local/Cellar/libsigc++/2.10.0/lib/sigc++-2.0/include -I/usr/local/Cellar/gdk-pixbuf/2.36.11/include/gdk-pixbuf-2.0 -I/usr/local/Cellar/libpng/1.6.34/include/libpng16 -I/usr/local/Cellar/glib/2.54.3/include/glib-2.0 -I/usr/local/Cellar/glib/2.54.3/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.41/include
GTK_CXXFLAGS = -I/usr/local/Cellar/gtkmm3/3.22.2/include/gtkmm-3.0 -I/usr/local/Cellar/gtkmm3/3.22.2/lib/gtkmm-3.0/include -I/usr/local/Cellar/atkmm/2.24.2/include/atkmm-1.6 -I/usr/local/Cellar/gtk+3/3.22.26/include/gtk-3.0/unix-print -I/usr/local/Cellar/gtkmm3/3.22.2/include/gdkmm-3.0 -I/usr/local/Cellar/gtkmm3/3.22.2/lib/gdkmm-3.0/include -I/usr/local/Cellar/glibmm/2.54.1/include/giomm-2.4 -I/usr/local/Cellar/glibmm/2.54.1/lib/giomm-2.4/include -I/usr/local/Cellar/pangomm/2.40.1/include/pangomm-1.4 -I/usr/local/Cellar/pangomm/2.40.1/lib/pangomm-1.4/include -I/usr/local/Cellar/glibmm/2.54.1/include/glibmm-2.4 -I/usr/local/Cellar/glibmm/2.54.1/lib/glibmm-2.4/include -I/usr/local/Cellar/gtk+3/3.22.26/include/gtk-3.0 -I/usr/local/Cellar/glib/2.54.3/include/gio-unix-2.0/ -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/libepoxy/1.4.3/include -I/usr/local/Cellar/pango/1.40.14/include/pango-1.0 -I/usr/local/Cellar/harfbuzz/1.7.5/include/harfbuzz -I/usr/local/Cellar/graphite2/1.3.10/include -I/usr/local/Cellar/pango/1.40.14/include/pango-1.0 -I/usr/local/Cellar/atk/2.26.1/include/atk-1.0 -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/cairomm/1.12.2/include/cairomm-1.0 -I/usr/local/Cellar/cairomm/1.12.2/lib/cairomm-1.0/include -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/pixman/0.34.0_1/include/pixman-1 -I/usr/local/Cellar/fontconfig/2.12.6/include -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/libpng/1.6.34/include/libpng16 -I/usr/local/Cellar/libsigc++/2.10.0/include/sigc++-2.0 -I/usr/local/Cellar/libsigc++/2.10.0/lib/sigc++-2.0/include -I/usr/local/Cellar/gdk-pixbuf/2.36.11/include/gdk-pixbuf-2.0 -I/usr/local/Cellar/libpng/1.6.34/include/libpng16 -I/usr/local/Cellar/glib/2.54.3/include/glib-2.0 -I/usr/local/Cellar/glib/2.54.3/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.41/include
GTK_LDFLAGS = -L/usr/local/Cellar/gtkmm3/3.22.2/lib -L/usr/local/Cellar/atkmm/2.24.2/lib -L/usr/local/Cellar/gtkmm3/3.22.2/lib -L/usr/local/Cellar/glibmm/2.54.1/lib -L/usr/local/Cellar/pangomm/2.40.1/lib -L/usr/local/Cellar/glibmm/2.54.1/lib -L/usr/local/Cellar/gtk+3/3.22.26/lib -L/usr/local/Cellar/pango/1.40.14/lib -L/usr/local/Cellar/atk/2.26.1/lib -L/usr/local/Cellar/cairo/1.14.12/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/Cellar/cairomm/1.12.2/lib -L/usr/local/Cellar/cairo/1.14.12/lib -L/usr/local/Cellar/libsigc++/2.10.0/lib -L/usr/local/Cellar/gdk-pixbuf/2.36.11/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/opt/gettext/lib -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lintl -Wl,-framework -Wl,CoreFoundation
GTK_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lintl 
GTK_STATIC_CXXFLAGS = -I/usr/local/Cellar/gtkmm3/3.22.2/include/gtkmm-3.0 -I/usr/local/Cellar/gtkmm3/3.22.2/lib/gtkmm-3.0/include -I/usr/local/Cellar/atkmm/2.24.2/include/atkmm-1.6 -I/usr/local/Cellar/gtk+3/3.22.26/include/gtk-3.0/unix-print -I/usr/local/Cellar/gtkmm3/3.22.2/include/gdkmm-3.0 -I/usr/local/Cellar/gtkmm3/3.22.2/lib/gdkmm-3.0/include -I/usr/local/Cellar/glibmm/2.54.1/include/giomm-2.4 -I/usr/local/Cellar/glibmm/2.54.1/lib/giomm-2.4/include -I/usr/local/Cellar/pangomm/2.40.1/include/pangomm-1.4 -I/usr/local/Cellar/pangomm/2.40.1/lib/pangomm-1.4/include -I/usr/local/Cellar/glibmm/2.54.1/include/glibmm-2.4 -I/usr/local/Cellar/glibmm/2.54.1/lib/glibmm-2.4/include -I/usr/local/Cellar/gtk+3/3.22.26/include/gtk-3.0 -I/usr/local/Cellar/glib/2.54.3/include/gio-unix-2.0/ -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/libepoxy/1.4.3/include -I/usr/local/Cellar/pango/1.40.14/include/pango-1.0 -I/usr/local/Cellar/harfbuzz/1.7.5/include/harfbuzz -I/usr/local/Cellar/graphite2/1.3.10/include -I/usr/local/Cellar/pango/1.40.14/include/pango-1.0 -I/usr/local/Cellar/atk/2.26.1/include/atk-1.0 -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/cairomm/1.12.2/include/cairomm-1.0 -I/usr/local/Cellar/cairomm/1.12.2/lib/cairomm-1.0/include -I/usr/local/Cellar/cairo/1.14.12/include/cairo -I/usr/local/Cellar/pixman/0.34.0_1/include/pixman-1 -I/usr/local/Cellar/fontconfig/2.12.6/include -I/usr/local/opt/freetype/include/freetype2 -I/usr/local/Cellar/libpng/1.6.34/include/libpng16 -I/usr/local/Cellar/libsigc++/2.10.0/include/sigc++-2.0 -I/usr/local/Cellar/libsigc++/2.10.0/lib/sigc++-2.0/include -I/usr/local/Cellar/gdk-pixbuf/2.36.11/include/gdk-pixbuf-2.0 -I/usr/local/Cellar/libpng/1.6.34/include/libpng16 -I/usr/local/Cellar/glib/2.54.3/include/glib-2.0 -I/usr/local/Cellar/glib/2.54.3/lib/glib-2.0/include -I/usr/local/opt/gettext/include -I/usr/local/Cellar/pcre/8.41/include
GTK_STATIC_LDFLAGS = -L/usr/local/Cellar/gtkmm3/3.22.2/lib -L/usr/local/Cellar/atkmm/2.24.2/lib -L/usr/local/Cellar/gtkmm3/3.22.2/lib -L/usr/local/Cellar/glibmm/2.54.1/lib -L/usr/local/Cellar/pangomm/2.40.1/lib -L/usr/local/Cellar/glibmm/2.54.1/lib -L/usr/local/Cellar/gtk+3/3.22.26/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/Cellar/libepoxy/1.4.3/lib -L/usr/local/Cellar/pango/1.40.14/lib -L/usr/local/Cellar/harfbuzz/1.7.5/lib -L/usr/local/Cellar/graphite2/1.3.10/lib -L/usr/local/Cellar/pango/1.40.14/lib -L/usr/local/Cellar/atk/2.26.1/lib -L/usr/local/Cellar/cairo/1.14.12/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/Cellar/cairomm/1.12.2/lib -L/usr/local/Cellar/cairo/1.14.12/lib -L/usr/local/Cellar/pixman/0.34.0_1/lib -L/usr/local/Cellar/fontconfig/2.12.6/lib -L/usr/local/opt/freetype/lib -L/usr/local/Cellar/libpng/1.6.34/lib -L/usr/local/Cellar/libsigc++/2.10.0/lib -L/usr/local/Cellar/gdk-pixbuf/2.36.11/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/Cellar/libpng/1.6.34/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/Cellar/libffi/3.2.1/lib -L/usr/local/Cellar/glib/2.54.3/lib -L/usr/local/opt/gettext/lib -L/usr/local/Cellar/pcre/8.41/lib -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lgio-2.0 -lepoxy -ldl -lpangocairo-1.0 -lpangoft2-1.0 -lharfbuzz -lm -framework ApplicationServices -lgraphite2 -lpango-1.0 -lm -latk-1.0 -lcairo-gobject -lgio-2.0 -lz -lresolv -Wl,-framework,Foundation -Wl,-framework,Carbon -lcairomm-1.0 -lcairo -lz -lpixman-1 -lfontconfig -lexpat -lfreetype -lz -lbz2 -lpng16 -lz -lpng16 -lz -lsigc-2.0 -lgdk_pixbuf-2.0 -lgmodule-2.0 -lpng16 -lz -lgobject-2.0 -lffi -lglib-2.0 -lintl -Wl,-framework -Wl,CoreFoundation -lpcre -lintl -Wl,-framework -Wl,CoreFoundation -liconv -Wl,-framework,Carbon -Wl,-framework,Foundation -lpcre -D_THREAD_SAFE -pthread
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_RELEASE = 
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTALL_VERSION_SUFFIX = 
IPOPT_CFLAGS = -I/usr/local/Cellar/ipopt/3.12.8_1/include/coin
IPOPT_CXXFLAGS = -I/usr/local/Cellar/ipopt/3.12.8_1/include/coin
IPOPT_LDFLAGS = -L/usr/local/Cellar/ipopt/3.12.8_1/lib -L/usr/local/opt/mumps/lib -lipopt -ldmumps -lmumps_common -lpord -lmpiseq -framework Accelerate -lm -ldl
IPOPT_LIBS = -lipopt -ldmumps -lmumps_common -lpord -lmpiseq -lm -ldl 
IPOPT_STATIC_CXXFLAGS = -I/usr/local/Cellar/ipopt/3.12.8_1/include/coin
IPOPT_STATIC_LDFLAGS = -L/usr/local/Cellar/ipopt/3.12.8_1/lib -L/usr/local/opt/mumps/lib -lipopt -ldmumps -lmumps_common -lpord -lmpiseq -framework Accelerate -lm -ldl
LATEXMK = /Library/TeX/texbin/latexmk
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = 
LEX = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing /usr/bin/flex++
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS =  ${LIBOBJDIR}mktime$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LLDB = /usr/bin/lldb
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}mktime$U.lo
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../.././install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = biogeme
PACKAGE_BUGREPORT = https://groups.google.com/d/forum/biogeme
PACKAGE_NAME = biogeme
PACKAGE_STRING = biogeme 2.7b
PACKAGE_TARNAME = biogeme
PACKAGE_URL = http://biogeme.epfl.ch
PACKAGE_VERSION = 2.7b
PATH_SEPARATOR = :
PBS = no
PKG_CONFIG = /usr/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHONBIN = /usr/local/bin/python3
PYTHON_CXXFLAGS = -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall
PYTHON_INCLUDES = -I/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/include/python3.6m -I/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/include/python3.6m
PYTHON_LDFLAGS =  -L/usr/local/opt/python3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/config-3.6m-darwin
PYTHON_LIBS = -lpython3.6m -ldl  -framework CoreFoundation 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.7b
YACC = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/missing bison++
abs_builddir = /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/libraries/bisonbiogeme
abs_srcdir = /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/libraries/bisonbiogeme
abs_top_builddir = /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github
abs_top_srcdir = /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__leading_dot = .
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin17.4.0
build_alias = 
build_cpu = x86_64
build_os = darwin17.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin17.4.0
host_alias = 
host_cpu = x86_64
host_os = darwin17.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/michelbierlaire/GoogleDrive/biogeme/biogemeSourceCode/github/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
ACLOCAL_AMFLAGS = -I m4
AM_YFLAGS = -d
AM_LFLAGS = -+ -Pyyspec -olex.yy.c
AM_CPPFLAGS = -I$(top_srcdir)/libraries/utils  -I$(top_srcdir)/libraries/randomNumbers -I$(top_srcdir)/libraries/parameters -I$(top_srcdir)/libraries/cfsqp -I$(top_srcdir)/libraries/solvopt -I$(top_srcdir)/libraries/linearAlgebra -I$(top_srcdir)/libraries/trustRegion
noinst_LTLIBRARIES = libbisonbiogeme.la
libbisonbiogeme_la_CXXFLAGS = $(AM_CXXFLAGS)
#noinst_LIBRARIES = libbisonbiogeme.a
#libbisonbiogeme_a_SOURCES = $(libbisonbiogeme_la_SOURCES)
#libbisonbiogeme_a_CXXFLAGS = $(AM_CXXFLAGS)
libbisonbiogeme_la_SOURCES = patSpecParser.yy patSpecScanner.ll \
patBisonSingletonFactory.cc \
patAdditiveUtility.cc \
patAggregateObservationData.cc \
patArithAbs.cc \
patArithAnd.cc \
patArithAttribute.cc \
patArithBinaryMinus.cc \
patArithBinaryPlus.cc \
patArithConstant.cc \
patArithDeriv.cc \
patArithDivide.cc \
patArithEqual.cc \
patArithExp.cc \
patArithGreater.cc \
patArithGreaterEqual.cc \
patArithInt.cc \
patArithLess.cc \
patArithLessEqual.cc \
patArithLog.cc \
patArithMax.cc \
patArithMin.cc \
patArithMod.cc \
patArithMult.cc \
patArithNode.cc \
patArithNormalRandom.cc \
patArithNot.cc \
patArithNotEqual.cc \
patArithOr.cc \
patArithPower.cc \
patArithRandom.cc \
patArithSqrt.cc \
patArithUnaryMinus.cc \
patArithUnifRandom.cc \
patArithVariable.cc \
patArrayIterator.cc \
patAttributeNamesIterator.cc \
patBetaLikeIterator.cc \
patBetaLikeParameter.cc \
patBiogeme.cc \
patBiogemeIterationBackup.cc \
patBiogemeScripting.cc \
patCNL.cc \
patCnlAlphaIterator.cc \
patConstraintNestIterator.cc \
patDataFile.cc \
patDataFileAggObsIterator.cc \
patDataFileIndIterator.cc \
patDataFileObsIterator.cc \
patDataMemory.cc \
patDiscreteParameterIterator.cc \
patDiscreteParameterProba.cc \
patEstimationResult.cc \
patFastBiogeme.cc \
patFileIterator.cc \
patFullCnlAlphaIterator.cc \
patGEV.cc \
patGeneralizedUtility.cc \
patIndividualData.cc \
patLegendre.cc \
patLikelihood.cc \
patLinearConstraint.cc \
patLinearUtility.cc \
patMaxLikeProblem.cc \
patMemoryObsNoPanelIterator.cc \
patMemoryObservationIterator.cc \
patMinimizedFunction.cc \
patModelSpec.cc \
patModelSpecCtd.cc \
patNL.cc \
patNetworkAlphaIterator.cc \
patNetworkGevAlt.cc \
patNetworkGevIterator.cc \
patNetworkGevModel.cc \
patNetworkGevNest.cc \
patNetworkGevNode.cc \
patNlNestIterator.cc \
patNonLinearConstraint.cc \
patObservationData.cc \
patOneZhengFosgerau.cc \
patProbaGevModel.cc \
patProbaGevPanelModel.cc \
patProbaMnlModel.cc \
patProbaMnlPanelModel.cc \
patProbaModel.cc \
patProbaOrdinalLogit.cc \
patProbaPanelModel.cc \
patProbaProbitModel.cc \
patPythonResults.cc \
patRandomParameter.cc \
patSample.cc \
patSampleEnuGetIndices.cc \
patSampleEnumeration.cc \
patSecondDerivatives.cc \
patSimBasedMaxLikeOptimization.cc \
patTestNormal.cc \
patUsedAttributeNamesIterator.cc \
patUtility.cc \
patValueVariables.cc \
patZhengFosgerau.cc \
patZhengTest.cc \
patBisonSingletonFactory.h \
patAdditiveUtility.h \
patAggregateObservationData.h \
patAlternative.h \
patArithAbs.h \
patArithAnd.h \
patArithAttribute.h \
patArithBinaryMinus.h \
patArithBinaryPlus.h \
patArithConstant.h \
patArithDeriv.h \
patArithDivide.h \
patArithEqual.h \
patArithExp.h \
patArithGreater.h \
patArithGreaterEqual.h \
patArithInt.h \
patArithLess.h \
patArithLessEqual.h \
patArithLog.h \
patArithMax.h \
patArithMin.h \
patArithMod.h \
patArithMult.h \
patArithNode.h \
patArithNormalRandom.h \
patArithNot.h \
patArithNotEqual.h \
patArithOr.h \
patArithPower.h \
patArithRandom.h \
patArithSqrt.h \
patArithUnaryMinus.h \
patArithUnifRandom.h \
patArithVariable.h \
patArrayIterator.h \
patAttributeNamesIterator.h \
patBetaLikeIterator.h \
patBetaLikeParameter.h \
patBiogeme.h \
patBiogemeIterationBackup.h \
patBiogemeScripting.h \
patCNL.h \
patCnlAlphaIterator.h \
patCnlAlphaParameter.h \
patConstraintNestIterator.h \
patDataFile.h \
patDataFileAggObsIterator.h \
patDataFileIndIterator.h \
patDataFileObsIterator.h \
patDataMemory.h \
patDataStorage.h \
patDiscreteParameter.h \
patDiscreteParameterIterator.h \
patDiscreteParameterProba.h \
patDistribType.h \
patEstimationResult.h \
patFastBiogeme.h \
patFileIterator.h \
patFullCnlAlphaIterator.h \
patGEV.h \
patGeneralizedUtility.h \
patIndividualData.h \
patLegendre.h \
patLikelihood.h \
patLinearConstraint.h \
patLinearUtility.h \
patMaxLikeProblem.h \
patMemoryObsNoPanelIterator.h \
patMemoryObservationIterator.h \
patMinimizedFunction.h \
patModelSpec.h \
patModelSpecCtd.h \
patNL.h \
patNetworkAlphaIterator.h \
patNetworkGevAlt.h \
patNetworkGevIterator.h \
patNetworkGevLinkParameter.h \
patNetworkGevModel.h \
patNetworkGevNest.h \
patNetworkGevNode.h \
patNlNestDefinition.h \
patNlNestIterator.h \
patNonLinearConstraint.h \
patObservationData.h \
patOneZhengFosgerau.h \
patProbaGevModel.h \
patProbaGevPanelModel.h \
patProbaMnlModel.h \
patProbaMnlPanelModel.h \
patProbaModel.h \
patProbaOrdinalLogit.h \
patProbaPanelModel.h \
patProbaProbitModel.h \
patPythonResults.h \
patRandomDraws.h \
patRandomParameter.h \
patSample.h \
patSampleEnuGetIndices.h \
patSampleEnumeration.h \
patSecondDerivatives.h \
patSimBasedMaxLikeOptimization.h \
patTestNormal.h \
patUsedAttributeNamesIterator.h \
patUtility.h \
patValueVariables.h \
patZhengFosgerau.h \
patZhengTest.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .ll .lo .o .obj .yy
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps libraries/bisonbiogeme/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps libraries/bisonbiogeme/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
patSpecParser.hh: patSpecParser.cc
	@if test ! -f $@; then rm -f patSpecParser.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) patSpecParser.cc; else :; fi

libbisonbiogeme.a: $(libbisonbiogeme_a_OBJECTS) $(libbisonbiogeme_a_DEPENDENCIES) $(EXTRA_libbisonbiogeme_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbisonbiogeme.a
	$(AM_V_AR)$(libbisonbiogeme_a_AR) libbisonbiogeme.a $(libbisonbiogeme_a_OBJECTS) $(libbisonbiogeme_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbisonbiogeme.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libbisonbiogeme.la: $(libbisonbiogeme_la_OBJECTS) $(libbisonbiogeme_la_DEPENDENCIES) $(EXTRA_libbisonbiogeme_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbisonbiogeme_la_LINK) $(am_libbisonbiogeme_la_rpath) $(libbisonbiogeme_la_OBJECTS) $(libbisonbiogeme_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

libbisonbiogeme_a-patSpecParser.o: patSpecParser.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSpecParser.o `test -f 'patSpecParser.cc' || echo '$(srcdir)/'`patSpecParser.cc

libbisonbiogeme_a-patSpecParser.obj: patSpecParser.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSpecParser.obj `if test -f 'patSpecParser.cc'; then $(CYGPATH_W) 'patSpecParser.cc'; else $(CYGPATH_W) '$(srcdir)/patSpecParser.cc'; fi`

libbisonbiogeme_a-patSpecScanner.o: patSpecScanner.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSpecScanner.o `test -f 'patSpecScanner.cc' || echo '$(srcdir)/'`patSpecScanner.cc

libbisonbiogeme_a-patSpecScanner.obj: patSpecScanner.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSpecScanner.obj `if test -f 'patSpecScanner.cc'; then $(CYGPATH_W) 'patSpecScanner.cc'; else $(CYGPATH_W) '$(srcdir)/patSpecScanner.cc'; fi`

libbisonbiogeme_a-patBisonSingletonFactory.o: patBisonSingletonFactory.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBisonSingletonFactory.o `test -f 'patBisonSingletonFactory.cc' || echo '$(srcdir)/'`patBisonSingletonFactory.cc

libbisonbiogeme_a-patBisonSingletonFactory.obj: patBisonSingletonFactory.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBisonSingletonFactory.obj `if test -f 'patBisonSingletonFactory.cc'; then $(CYGPATH_W) 'patBisonSingletonFactory.cc'; else $(CYGPATH_W) '$(srcdir)/patBisonSingletonFactory.cc'; fi`

libbisonbiogeme_a-patAdditiveUtility.o: patAdditiveUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patAdditiveUtility.o `test -f 'patAdditiveUtility.cc' || echo '$(srcdir)/'`patAdditiveUtility.cc

libbisonbiogeme_a-patAdditiveUtility.obj: patAdditiveUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patAdditiveUtility.obj `if test -f 'patAdditiveUtility.cc'; then $(CYGPATH_W) 'patAdditiveUtility.cc'; else $(CYGPATH_W) '$(srcdir)/patAdditiveUtility.cc'; fi`

libbisonbiogeme_a-patAggregateObservationData.o: patAggregateObservationData.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patAggregateObservationData.o `test -f 'patAggregateObservationData.cc' || echo '$(srcdir)/'`patAggregateObservationData.cc

libbisonbiogeme_a-patAggregateObservationData.obj: patAggregateObservationData.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patAggregateObservationData.obj `if test -f 'patAggregateObservationData.cc'; then $(CYGPATH_W) 'patAggregateObservationData.cc'; else $(CYGPATH_W) '$(srcdir)/patAggregateObservationData.cc'; fi`

libbisonbiogeme_a-patArithAbs.o: patArithAbs.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithAbs.o `test -f 'patArithAbs.cc' || echo '$(srcdir)/'`patArithAbs.cc

libbisonbiogeme_a-patArithAbs.obj: patArithAbs.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithAbs.obj `if test -f 'patArithAbs.cc'; then $(CYGPATH_W) 'patArithAbs.cc'; else $(CYGPATH_W) '$(srcdir)/patArithAbs.cc'; fi`

libbisonbiogeme_a-patArithAnd.o: patArithAnd.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithAnd.o `test -f 'patArithAnd.cc' || echo '$(srcdir)/'`patArithAnd.cc

libbisonbiogeme_a-patArithAnd.obj: patArithAnd.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithAnd.obj `if test -f 'patArithAnd.cc'; then $(CYGPATH_W) 'patArithAnd.cc'; else $(CYGPATH_W) '$(srcdir)/patArithAnd.cc'; fi`

libbisonbiogeme_a-patArithAttribute.o: patArithAttribute.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithAttribute.o `test -f 'patArithAttribute.cc' || echo '$(srcdir)/'`patArithAttribute.cc

libbisonbiogeme_a-patArithAttribute.obj: patArithAttribute.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithAttribute.obj `if test -f 'patArithAttribute.cc'; then $(CYGPATH_W) 'patArithAttribute.cc'; else $(CYGPATH_W) '$(srcdir)/patArithAttribute.cc'; fi`

libbisonbiogeme_a-patArithBinaryMinus.o: patArithBinaryMinus.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithBinaryMinus.o `test -f 'patArithBinaryMinus.cc' || echo '$(srcdir)/'`patArithBinaryMinus.cc

libbisonbiogeme_a-patArithBinaryMinus.obj: patArithBinaryMinus.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithBinaryMinus.obj `if test -f 'patArithBinaryMinus.cc'; then $(CYGPATH_W) 'patArithBinaryMinus.cc'; else $(CYGPATH_W) '$(srcdir)/patArithBinaryMinus.cc'; fi`

libbisonbiogeme_a-patArithBinaryPlus.o: patArithBinaryPlus.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithBinaryPlus.o `test -f 'patArithBinaryPlus.cc' || echo '$(srcdir)/'`patArithBinaryPlus.cc

libbisonbiogeme_a-patArithBinaryPlus.obj: patArithBinaryPlus.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithBinaryPlus.obj `if test -f 'patArithBinaryPlus.cc'; then $(CYGPATH_W) 'patArithBinaryPlus.cc'; else $(CYGPATH_W) '$(srcdir)/patArithBinaryPlus.cc'; fi`

libbisonbiogeme_a-patArithConstant.o: patArithConstant.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithConstant.o `test -f 'patArithConstant.cc' || echo '$(srcdir)/'`patArithConstant.cc

libbisonbiogeme_a-patArithConstant.obj: patArithConstant.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithConstant.obj `if test -f 'patArithConstant.cc'; then $(CYGPATH_W) 'patArithConstant.cc'; else $(CYGPATH_W) '$(srcdir)/patArithConstant.cc'; fi`

libbisonbiogeme_a-patArithDeriv.o: patArithDeriv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithDeriv.o `test -f 'patArithDeriv.cc' || echo '$(srcdir)/'`patArithDeriv.cc

libbisonbiogeme_a-patArithDeriv.obj: patArithDeriv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithDeriv.obj `if test -f 'patArithDeriv.cc'; then $(CYGPATH_W) 'patArithDeriv.cc'; else $(CYGPATH_W) '$(srcdir)/patArithDeriv.cc'; fi`

libbisonbiogeme_a-patArithDivide.o: patArithDivide.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithDivide.o `test -f 'patArithDivide.cc' || echo '$(srcdir)/'`patArithDivide.cc

libbisonbiogeme_a-patArithDivide.obj: patArithDivide.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithDivide.obj `if test -f 'patArithDivide.cc'; then $(CYGPATH_W) 'patArithDivide.cc'; else $(CYGPATH_W) '$(srcdir)/patArithDivide.cc'; fi`

libbisonbiogeme_a-patArithEqual.o: patArithEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithEqual.o `test -f 'patArithEqual.cc' || echo '$(srcdir)/'`patArithEqual.cc

libbisonbiogeme_a-patArithEqual.obj: patArithEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithEqual.obj `if test -f 'patArithEqual.cc'; then $(CYGPATH_W) 'patArithEqual.cc'; else $(CYGPATH_W) '$(srcdir)/patArithEqual.cc'; fi`

libbisonbiogeme_a-patArithExp.o: patArithExp.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithExp.o `test -f 'patArithExp.cc' || echo '$(srcdir)/'`patArithExp.cc

libbisonbiogeme_a-patArithExp.obj: patArithExp.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithExp.obj `if test -f 'patArithExp.cc'; then $(CYGPATH_W) 'patArithExp.cc'; else $(CYGPATH_W) '$(srcdir)/patArithExp.cc'; fi`

libbisonbiogeme_a-patArithGreater.o: patArithGreater.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithGreater.o `test -f 'patArithGreater.cc' || echo '$(srcdir)/'`patArithGreater.cc

libbisonbiogeme_a-patArithGreater.obj: patArithGreater.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithGreater.obj `if test -f 'patArithGreater.cc'; then $(CYGPATH_W) 'patArithGreater.cc'; else $(CYGPATH_W) '$(srcdir)/patArithGreater.cc'; fi`

libbisonbiogeme_a-patArithGreaterEqual.o: patArithGreaterEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithGreaterEqual.o `test -f 'patArithGreaterEqual.cc' || echo '$(srcdir)/'`patArithGreaterEqual.cc

libbisonbiogeme_a-patArithGreaterEqual.obj: patArithGreaterEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithGreaterEqual.obj `if test -f 'patArithGreaterEqual.cc'; then $(CYGPATH_W) 'patArithGreaterEqual.cc'; else $(CYGPATH_W) '$(srcdir)/patArithGreaterEqual.cc'; fi`

libbisonbiogeme_a-patArithInt.o: patArithInt.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithInt.o `test -f 'patArithInt.cc' || echo '$(srcdir)/'`patArithInt.cc

libbisonbiogeme_a-patArithInt.obj: patArithInt.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithInt.obj `if test -f 'patArithInt.cc'; then $(CYGPATH_W) 'patArithInt.cc'; else $(CYGPATH_W) '$(srcdir)/patArithInt.cc'; fi`

libbisonbiogeme_a-patArithLess.o: patArithLess.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithLess.o `test -f 'patArithLess.cc' || echo '$(srcdir)/'`patArithLess.cc

libbisonbiogeme_a-patArithLess.obj: patArithLess.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithLess.obj `if test -f 'patArithLess.cc'; then $(CYGPATH_W) 'patArithLess.cc'; else $(CYGPATH_W) '$(srcdir)/patArithLess.cc'; fi`

libbisonbiogeme_a-patArithLessEqual.o: patArithLessEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithLessEqual.o `test -f 'patArithLessEqual.cc' || echo '$(srcdir)/'`patArithLessEqual.cc

libbisonbiogeme_a-patArithLessEqual.obj: patArithLessEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithLessEqual.obj `if test -f 'patArithLessEqual.cc'; then $(CYGPATH_W) 'patArithLessEqual.cc'; else $(CYGPATH_W) '$(srcdir)/patArithLessEqual.cc'; fi`

libbisonbiogeme_a-patArithLog.o: patArithLog.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithLog.o `test -f 'patArithLog.cc' || echo '$(srcdir)/'`patArithLog.cc

libbisonbiogeme_a-patArithLog.obj: patArithLog.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithLog.obj `if test -f 'patArithLog.cc'; then $(CYGPATH_W) 'patArithLog.cc'; else $(CYGPATH_W) '$(srcdir)/patArithLog.cc'; fi`

libbisonbiogeme_a-patArithMax.o: patArithMax.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMax.o `test -f 'patArithMax.cc' || echo '$(srcdir)/'`patArithMax.cc

libbisonbiogeme_a-patArithMax.obj: patArithMax.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMax.obj `if test -f 'patArithMax.cc'; then $(CYGPATH_W) 'patArithMax.cc'; else $(CYGPATH_W) '$(srcdir)/patArithMax.cc'; fi`

libbisonbiogeme_a-patArithMin.o: patArithMin.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMin.o `test -f 'patArithMin.cc' || echo '$(srcdir)/'`patArithMin.cc

libbisonbiogeme_a-patArithMin.obj: patArithMin.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMin.obj `if test -f 'patArithMin.cc'; then $(CYGPATH_W) 'patArithMin.cc'; else $(CYGPATH_W) '$(srcdir)/patArithMin.cc'; fi`

libbisonbiogeme_a-patArithMod.o: patArithMod.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMod.o `test -f 'patArithMod.cc' || echo '$(srcdir)/'`patArithMod.cc

libbisonbiogeme_a-patArithMod.obj: patArithMod.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMod.obj `if test -f 'patArithMod.cc'; then $(CYGPATH_W) 'patArithMod.cc'; else $(CYGPATH_W) '$(srcdir)/patArithMod.cc'; fi`

libbisonbiogeme_a-patArithMult.o: patArithMult.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMult.o `test -f 'patArithMult.cc' || echo '$(srcdir)/'`patArithMult.cc

libbisonbiogeme_a-patArithMult.obj: patArithMult.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithMult.obj `if test -f 'patArithMult.cc'; then $(CYGPATH_W) 'patArithMult.cc'; else $(CYGPATH_W) '$(srcdir)/patArithMult.cc'; fi`

libbisonbiogeme_a-patArithNode.o: patArithNode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNode.o `test -f 'patArithNode.cc' || echo '$(srcdir)/'`patArithNode.cc

libbisonbiogeme_a-patArithNode.obj: patArithNode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNode.obj `if test -f 'patArithNode.cc'; then $(CYGPATH_W) 'patArithNode.cc'; else $(CYGPATH_W) '$(srcdir)/patArithNode.cc'; fi`

libbisonbiogeme_a-patArithNormalRandom.o: patArithNormalRandom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNormalRandom.o `test -f 'patArithNormalRandom.cc' || echo '$(srcdir)/'`patArithNormalRandom.cc

libbisonbiogeme_a-patArithNormalRandom.obj: patArithNormalRandom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNormalRandom.obj `if test -f 'patArithNormalRandom.cc'; then $(CYGPATH_W) 'patArithNormalRandom.cc'; else $(CYGPATH_W) '$(srcdir)/patArithNormalRandom.cc'; fi`

libbisonbiogeme_a-patArithNot.o: patArithNot.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNot.o `test -f 'patArithNot.cc' || echo '$(srcdir)/'`patArithNot.cc

libbisonbiogeme_a-patArithNot.obj: patArithNot.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNot.obj `if test -f 'patArithNot.cc'; then $(CYGPATH_W) 'patArithNot.cc'; else $(CYGPATH_W) '$(srcdir)/patArithNot.cc'; fi`

libbisonbiogeme_a-patArithNotEqual.o: patArithNotEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNotEqual.o `test -f 'patArithNotEqual.cc' || echo '$(srcdir)/'`patArithNotEqual.cc

libbisonbiogeme_a-patArithNotEqual.obj: patArithNotEqual.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithNotEqual.obj `if test -f 'patArithNotEqual.cc'; then $(CYGPATH_W) 'patArithNotEqual.cc'; else $(CYGPATH_W) '$(srcdir)/patArithNotEqual.cc'; fi`

libbisonbiogeme_a-patArithOr.o: patArithOr.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithOr.o `test -f 'patArithOr.cc' || echo '$(srcdir)/'`patArithOr.cc

libbisonbiogeme_a-patArithOr.obj: patArithOr.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithOr.obj `if test -f 'patArithOr.cc'; then $(CYGPATH_W) 'patArithOr.cc'; else $(CYGPATH_W) '$(srcdir)/patArithOr.cc'; fi`

libbisonbiogeme_a-patArithPower.o: patArithPower.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithPower.o `test -f 'patArithPower.cc' || echo '$(srcdir)/'`patArithPower.cc

libbisonbiogeme_a-patArithPower.obj: patArithPower.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithPower.obj `if test -f 'patArithPower.cc'; then $(CYGPATH_W) 'patArithPower.cc'; else $(CYGPATH_W) '$(srcdir)/patArithPower.cc'; fi`

libbisonbiogeme_a-patArithRandom.o: patArithRandom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithRandom.o `test -f 'patArithRandom.cc' || echo '$(srcdir)/'`patArithRandom.cc

libbisonbiogeme_a-patArithRandom.obj: patArithRandom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithRandom.obj `if test -f 'patArithRandom.cc'; then $(CYGPATH_W) 'patArithRandom.cc'; else $(CYGPATH_W) '$(srcdir)/patArithRandom.cc'; fi`

libbisonbiogeme_a-patArithSqrt.o: patArithSqrt.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithSqrt.o `test -f 'patArithSqrt.cc' || echo '$(srcdir)/'`patArithSqrt.cc

libbisonbiogeme_a-patArithSqrt.obj: patArithSqrt.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithSqrt.obj `if test -f 'patArithSqrt.cc'; then $(CYGPATH_W) 'patArithSqrt.cc'; else $(CYGPATH_W) '$(srcdir)/patArithSqrt.cc'; fi`

libbisonbiogeme_a-patArithUnaryMinus.o: patArithUnaryMinus.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithUnaryMinus.o `test -f 'patArithUnaryMinus.cc' || echo '$(srcdir)/'`patArithUnaryMinus.cc

libbisonbiogeme_a-patArithUnaryMinus.obj: patArithUnaryMinus.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithUnaryMinus.obj `if test -f 'patArithUnaryMinus.cc'; then $(CYGPATH_W) 'patArithUnaryMinus.cc'; else $(CYGPATH_W) '$(srcdir)/patArithUnaryMinus.cc'; fi`

libbisonbiogeme_a-patArithUnifRandom.o: patArithUnifRandom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithUnifRandom.o `test -f 'patArithUnifRandom.cc' || echo '$(srcdir)/'`patArithUnifRandom.cc

libbisonbiogeme_a-patArithUnifRandom.obj: patArithUnifRandom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithUnifRandom.obj `if test -f 'patArithUnifRandom.cc'; then $(CYGPATH_W) 'patArithUnifRandom.cc'; else $(CYGPATH_W) '$(srcdir)/patArithUnifRandom.cc'; fi`

libbisonbiogeme_a-patArithVariable.o: patArithVariable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithVariable.o `test -f 'patArithVariable.cc' || echo '$(srcdir)/'`patArithVariable.cc

libbisonbiogeme_a-patArithVariable.obj: patArithVariable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArithVariable.obj `if test -f 'patArithVariable.cc'; then $(CYGPATH_W) 'patArithVariable.cc'; else $(CYGPATH_W) '$(srcdir)/patArithVariable.cc'; fi`

libbisonbiogeme_a-patArrayIterator.o: patArrayIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArrayIterator.o `test -f 'patArrayIterator.cc' || echo '$(srcdir)/'`patArrayIterator.cc

libbisonbiogeme_a-patArrayIterator.obj: patArrayIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patArrayIterator.obj `if test -f 'patArrayIterator.cc'; then $(CYGPATH_W) 'patArrayIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patArrayIterator.cc'; fi`

libbisonbiogeme_a-patAttributeNamesIterator.o: patAttributeNamesIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patAttributeNamesIterator.o `test -f 'patAttributeNamesIterator.cc' || echo '$(srcdir)/'`patAttributeNamesIterator.cc

libbisonbiogeme_a-patAttributeNamesIterator.obj: patAttributeNamesIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patAttributeNamesIterator.obj `if test -f 'patAttributeNamesIterator.cc'; then $(CYGPATH_W) 'patAttributeNamesIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patAttributeNamesIterator.cc'; fi`

libbisonbiogeme_a-patBetaLikeIterator.o: patBetaLikeIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBetaLikeIterator.o `test -f 'patBetaLikeIterator.cc' || echo '$(srcdir)/'`patBetaLikeIterator.cc

libbisonbiogeme_a-patBetaLikeIterator.obj: patBetaLikeIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBetaLikeIterator.obj `if test -f 'patBetaLikeIterator.cc'; then $(CYGPATH_W) 'patBetaLikeIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patBetaLikeIterator.cc'; fi`

libbisonbiogeme_a-patBetaLikeParameter.o: patBetaLikeParameter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBetaLikeParameter.o `test -f 'patBetaLikeParameter.cc' || echo '$(srcdir)/'`patBetaLikeParameter.cc

libbisonbiogeme_a-patBetaLikeParameter.obj: patBetaLikeParameter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBetaLikeParameter.obj `if test -f 'patBetaLikeParameter.cc'; then $(CYGPATH_W) 'patBetaLikeParameter.cc'; else $(CYGPATH_W) '$(srcdir)/patBetaLikeParameter.cc'; fi`

libbisonbiogeme_a-patBiogeme.o: patBiogeme.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBiogeme.o `test -f 'patBiogeme.cc' || echo '$(srcdir)/'`patBiogeme.cc

libbisonbiogeme_a-patBiogeme.obj: patBiogeme.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBiogeme.obj `if test -f 'patBiogeme.cc'; then $(CYGPATH_W) 'patBiogeme.cc'; else $(CYGPATH_W) '$(srcdir)/patBiogeme.cc'; fi`

libbisonbiogeme_a-patBiogemeIterationBackup.o: patBiogemeIterationBackup.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBiogemeIterationBackup.o `test -f 'patBiogemeIterationBackup.cc' || echo '$(srcdir)/'`patBiogemeIterationBackup.cc

libbisonbiogeme_a-patBiogemeIterationBackup.obj: patBiogemeIterationBackup.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBiogemeIterationBackup.obj `if test -f 'patBiogemeIterationBackup.cc'; then $(CYGPATH_W) 'patBiogemeIterationBackup.cc'; else $(CYGPATH_W) '$(srcdir)/patBiogemeIterationBackup.cc'; fi`

libbisonbiogeme_a-patBiogemeScripting.o: patBiogemeScripting.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBiogemeScripting.o `test -f 'patBiogemeScripting.cc' || echo '$(srcdir)/'`patBiogemeScripting.cc

libbisonbiogeme_a-patBiogemeScripting.obj: patBiogemeScripting.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patBiogemeScripting.obj `if test -f 'patBiogemeScripting.cc'; then $(CYGPATH_W) 'patBiogemeScripting.cc'; else $(CYGPATH_W) '$(srcdir)/patBiogemeScripting.cc'; fi`

libbisonbiogeme_a-patCNL.o: patCNL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patCNL.o `test -f 'patCNL.cc' || echo '$(srcdir)/'`patCNL.cc

libbisonbiogeme_a-patCNL.obj: patCNL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patCNL.obj `if test -f 'patCNL.cc'; then $(CYGPATH_W) 'patCNL.cc'; else $(CYGPATH_W) '$(srcdir)/patCNL.cc'; fi`

libbisonbiogeme_a-patCnlAlphaIterator.o: patCnlAlphaIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patCnlAlphaIterator.o `test -f 'patCnlAlphaIterator.cc' || echo '$(srcdir)/'`patCnlAlphaIterator.cc

libbisonbiogeme_a-patCnlAlphaIterator.obj: patCnlAlphaIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patCnlAlphaIterator.obj `if test -f 'patCnlAlphaIterator.cc'; then $(CYGPATH_W) 'patCnlAlphaIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patCnlAlphaIterator.cc'; fi`

libbisonbiogeme_a-patConstraintNestIterator.o: patConstraintNestIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patConstraintNestIterator.o `test -f 'patConstraintNestIterator.cc' || echo '$(srcdir)/'`patConstraintNestIterator.cc

libbisonbiogeme_a-patConstraintNestIterator.obj: patConstraintNestIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patConstraintNestIterator.obj `if test -f 'patConstraintNestIterator.cc'; then $(CYGPATH_W) 'patConstraintNestIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patConstraintNestIterator.cc'; fi`

libbisonbiogeme_a-patDataFile.o: patDataFile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFile.o `test -f 'patDataFile.cc' || echo '$(srcdir)/'`patDataFile.cc

libbisonbiogeme_a-patDataFile.obj: patDataFile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFile.obj `if test -f 'patDataFile.cc'; then $(CYGPATH_W) 'patDataFile.cc'; else $(CYGPATH_W) '$(srcdir)/patDataFile.cc'; fi`

libbisonbiogeme_a-patDataFileAggObsIterator.o: patDataFileAggObsIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFileAggObsIterator.o `test -f 'patDataFileAggObsIterator.cc' || echo '$(srcdir)/'`patDataFileAggObsIterator.cc

libbisonbiogeme_a-patDataFileAggObsIterator.obj: patDataFileAggObsIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFileAggObsIterator.obj `if test -f 'patDataFileAggObsIterator.cc'; then $(CYGPATH_W) 'patDataFileAggObsIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patDataFileAggObsIterator.cc'; fi`

libbisonbiogeme_a-patDataFileIndIterator.o: patDataFileIndIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFileIndIterator.o `test -f 'patDataFileIndIterator.cc' || echo '$(srcdir)/'`patDataFileIndIterator.cc

libbisonbiogeme_a-patDataFileIndIterator.obj: patDataFileIndIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFileIndIterator.obj `if test -f 'patDataFileIndIterator.cc'; then $(CYGPATH_W) 'patDataFileIndIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patDataFileIndIterator.cc'; fi`

libbisonbiogeme_a-patDataFileObsIterator.o: patDataFileObsIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFileObsIterator.o `test -f 'patDataFileObsIterator.cc' || echo '$(srcdir)/'`patDataFileObsIterator.cc

libbisonbiogeme_a-patDataFileObsIterator.obj: patDataFileObsIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataFileObsIterator.obj `if test -f 'patDataFileObsIterator.cc'; then $(CYGPATH_W) 'patDataFileObsIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patDataFileObsIterator.cc'; fi`

libbisonbiogeme_a-patDataMemory.o: patDataMemory.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataMemory.o `test -f 'patDataMemory.cc' || echo '$(srcdir)/'`patDataMemory.cc

libbisonbiogeme_a-patDataMemory.obj: patDataMemory.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDataMemory.obj `if test -f 'patDataMemory.cc'; then $(CYGPATH_W) 'patDataMemory.cc'; else $(CYGPATH_W) '$(srcdir)/patDataMemory.cc'; fi`

libbisonbiogeme_a-patDiscreteParameterIterator.o: patDiscreteParameterIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDiscreteParameterIterator.o `test -f 'patDiscreteParameterIterator.cc' || echo '$(srcdir)/'`patDiscreteParameterIterator.cc

libbisonbiogeme_a-patDiscreteParameterIterator.obj: patDiscreteParameterIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDiscreteParameterIterator.obj `if test -f 'patDiscreteParameterIterator.cc'; then $(CYGPATH_W) 'patDiscreteParameterIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patDiscreteParameterIterator.cc'; fi`

libbisonbiogeme_a-patDiscreteParameterProba.o: patDiscreteParameterProba.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDiscreteParameterProba.o `test -f 'patDiscreteParameterProba.cc' || echo '$(srcdir)/'`patDiscreteParameterProba.cc

libbisonbiogeme_a-patDiscreteParameterProba.obj: patDiscreteParameterProba.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patDiscreteParameterProba.obj `if test -f 'patDiscreteParameterProba.cc'; then $(CYGPATH_W) 'patDiscreteParameterProba.cc'; else $(CYGPATH_W) '$(srcdir)/patDiscreteParameterProba.cc'; fi`

libbisonbiogeme_a-patEstimationResult.o: patEstimationResult.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patEstimationResult.o `test -f 'patEstimationResult.cc' || echo '$(srcdir)/'`patEstimationResult.cc

libbisonbiogeme_a-patEstimationResult.obj: patEstimationResult.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patEstimationResult.obj `if test -f 'patEstimationResult.cc'; then $(CYGPATH_W) 'patEstimationResult.cc'; else $(CYGPATH_W) '$(srcdir)/patEstimationResult.cc'; fi`

libbisonbiogeme_a-patFastBiogeme.o: patFastBiogeme.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patFastBiogeme.o `test -f 'patFastBiogeme.cc' || echo '$(srcdir)/'`patFastBiogeme.cc

libbisonbiogeme_a-patFastBiogeme.obj: patFastBiogeme.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patFastBiogeme.obj `if test -f 'patFastBiogeme.cc'; then $(CYGPATH_W) 'patFastBiogeme.cc'; else $(CYGPATH_W) '$(srcdir)/patFastBiogeme.cc'; fi`

libbisonbiogeme_a-patFileIterator.o: patFileIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patFileIterator.o `test -f 'patFileIterator.cc' || echo '$(srcdir)/'`patFileIterator.cc

libbisonbiogeme_a-patFileIterator.obj: patFileIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patFileIterator.obj `if test -f 'patFileIterator.cc'; then $(CYGPATH_W) 'patFileIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patFileIterator.cc'; fi`

libbisonbiogeme_a-patFullCnlAlphaIterator.o: patFullCnlAlphaIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patFullCnlAlphaIterator.o `test -f 'patFullCnlAlphaIterator.cc' || echo '$(srcdir)/'`patFullCnlAlphaIterator.cc

libbisonbiogeme_a-patFullCnlAlphaIterator.obj: patFullCnlAlphaIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patFullCnlAlphaIterator.obj `if test -f 'patFullCnlAlphaIterator.cc'; then $(CYGPATH_W) 'patFullCnlAlphaIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patFullCnlAlphaIterator.cc'; fi`

libbisonbiogeme_a-patGEV.o: patGEV.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patGEV.o `test -f 'patGEV.cc' || echo '$(srcdir)/'`patGEV.cc

libbisonbiogeme_a-patGEV.obj: patGEV.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patGEV.obj `if test -f 'patGEV.cc'; then $(CYGPATH_W) 'patGEV.cc'; else $(CYGPATH_W) '$(srcdir)/patGEV.cc'; fi`

libbisonbiogeme_a-patGeneralizedUtility.o: patGeneralizedUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patGeneralizedUtility.o `test -f 'patGeneralizedUtility.cc' || echo '$(srcdir)/'`patGeneralizedUtility.cc

libbisonbiogeme_a-patGeneralizedUtility.obj: patGeneralizedUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patGeneralizedUtility.obj `if test -f 'patGeneralizedUtility.cc'; then $(CYGPATH_W) 'patGeneralizedUtility.cc'; else $(CYGPATH_W) '$(srcdir)/patGeneralizedUtility.cc'; fi`

libbisonbiogeme_a-patIndividualData.o: patIndividualData.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patIndividualData.o `test -f 'patIndividualData.cc' || echo '$(srcdir)/'`patIndividualData.cc

libbisonbiogeme_a-patIndividualData.obj: patIndividualData.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patIndividualData.obj `if test -f 'patIndividualData.cc'; then $(CYGPATH_W) 'patIndividualData.cc'; else $(CYGPATH_W) '$(srcdir)/patIndividualData.cc'; fi`

libbisonbiogeme_a-patLegendre.o: patLegendre.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLegendre.o `test -f 'patLegendre.cc' || echo '$(srcdir)/'`patLegendre.cc

libbisonbiogeme_a-patLegendre.obj: patLegendre.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLegendre.obj `if test -f 'patLegendre.cc'; then $(CYGPATH_W) 'patLegendre.cc'; else $(CYGPATH_W) '$(srcdir)/patLegendre.cc'; fi`

libbisonbiogeme_a-patLikelihood.o: patLikelihood.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLikelihood.o `test -f 'patLikelihood.cc' || echo '$(srcdir)/'`patLikelihood.cc

libbisonbiogeme_a-patLikelihood.obj: patLikelihood.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLikelihood.obj `if test -f 'patLikelihood.cc'; then $(CYGPATH_W) 'patLikelihood.cc'; else $(CYGPATH_W) '$(srcdir)/patLikelihood.cc'; fi`

libbisonbiogeme_a-patLinearConstraint.o: patLinearConstraint.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLinearConstraint.o `test -f 'patLinearConstraint.cc' || echo '$(srcdir)/'`patLinearConstraint.cc

libbisonbiogeme_a-patLinearConstraint.obj: patLinearConstraint.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLinearConstraint.obj `if test -f 'patLinearConstraint.cc'; then $(CYGPATH_W) 'patLinearConstraint.cc'; else $(CYGPATH_W) '$(srcdir)/patLinearConstraint.cc'; fi`

libbisonbiogeme_a-patLinearUtility.o: patLinearUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLinearUtility.o `test -f 'patLinearUtility.cc' || echo '$(srcdir)/'`patLinearUtility.cc

libbisonbiogeme_a-patLinearUtility.obj: patLinearUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patLinearUtility.obj `if test -f 'patLinearUtility.cc'; then $(CYGPATH_W) 'patLinearUtility.cc'; else $(CYGPATH_W) '$(srcdir)/patLinearUtility.cc'; fi`

libbisonbiogeme_a-patMaxLikeProblem.o: patMaxLikeProblem.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMaxLikeProblem.o `test -f 'patMaxLikeProblem.cc' || echo '$(srcdir)/'`patMaxLikeProblem.cc

libbisonbiogeme_a-patMaxLikeProblem.obj: patMaxLikeProblem.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMaxLikeProblem.obj `if test -f 'patMaxLikeProblem.cc'; then $(CYGPATH_W) 'patMaxLikeProblem.cc'; else $(CYGPATH_W) '$(srcdir)/patMaxLikeProblem.cc'; fi`

libbisonbiogeme_a-patMemoryObsNoPanelIterator.o: patMemoryObsNoPanelIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMemoryObsNoPanelIterator.o `test -f 'patMemoryObsNoPanelIterator.cc' || echo '$(srcdir)/'`patMemoryObsNoPanelIterator.cc

libbisonbiogeme_a-patMemoryObsNoPanelIterator.obj: patMemoryObsNoPanelIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMemoryObsNoPanelIterator.obj `if test -f 'patMemoryObsNoPanelIterator.cc'; then $(CYGPATH_W) 'patMemoryObsNoPanelIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patMemoryObsNoPanelIterator.cc'; fi`

libbisonbiogeme_a-patMemoryObservationIterator.o: patMemoryObservationIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMemoryObservationIterator.o `test -f 'patMemoryObservationIterator.cc' || echo '$(srcdir)/'`patMemoryObservationIterator.cc

libbisonbiogeme_a-patMemoryObservationIterator.obj: patMemoryObservationIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMemoryObservationIterator.obj `if test -f 'patMemoryObservationIterator.cc'; then $(CYGPATH_W) 'patMemoryObservationIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patMemoryObservationIterator.cc'; fi`

libbisonbiogeme_a-patMinimizedFunction.o: patMinimizedFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMinimizedFunction.o `test -f 'patMinimizedFunction.cc' || echo '$(srcdir)/'`patMinimizedFunction.cc

libbisonbiogeme_a-patMinimizedFunction.obj: patMinimizedFunction.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patMinimizedFunction.obj `if test -f 'patMinimizedFunction.cc'; then $(CYGPATH_W) 'patMinimizedFunction.cc'; else $(CYGPATH_W) '$(srcdir)/patMinimizedFunction.cc'; fi`

libbisonbiogeme_a-patModelSpec.o: patModelSpec.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patModelSpec.o `test -f 'patModelSpec.cc' || echo '$(srcdir)/'`patModelSpec.cc

libbisonbiogeme_a-patModelSpec.obj: patModelSpec.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patModelSpec.obj `if test -f 'patModelSpec.cc'; then $(CYGPATH_W) 'patModelSpec.cc'; else $(CYGPATH_W) '$(srcdir)/patModelSpec.cc'; fi`

libbisonbiogeme_a-patModelSpecCtd.o: patModelSpecCtd.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patModelSpecCtd.o `test -f 'patModelSpecCtd.cc' || echo '$(srcdir)/'`patModelSpecCtd.cc

libbisonbiogeme_a-patModelSpecCtd.obj: patModelSpecCtd.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patModelSpecCtd.obj `if test -f 'patModelSpecCtd.cc'; then $(CYGPATH_W) 'patModelSpecCtd.cc'; else $(CYGPATH_W) '$(srcdir)/patModelSpecCtd.cc'; fi`

libbisonbiogeme_a-patNL.o: patNL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNL.o `test -f 'patNL.cc' || echo '$(srcdir)/'`patNL.cc

libbisonbiogeme_a-patNL.obj: patNL.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNL.obj `if test -f 'patNL.cc'; then $(CYGPATH_W) 'patNL.cc'; else $(CYGPATH_W) '$(srcdir)/patNL.cc'; fi`

libbisonbiogeme_a-patNetworkAlphaIterator.o: patNetworkAlphaIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkAlphaIterator.o `test -f 'patNetworkAlphaIterator.cc' || echo '$(srcdir)/'`patNetworkAlphaIterator.cc

libbisonbiogeme_a-patNetworkAlphaIterator.obj: patNetworkAlphaIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkAlphaIterator.obj `if test -f 'patNetworkAlphaIterator.cc'; then $(CYGPATH_W) 'patNetworkAlphaIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patNetworkAlphaIterator.cc'; fi`

libbisonbiogeme_a-patNetworkGevAlt.o: patNetworkGevAlt.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevAlt.o `test -f 'patNetworkGevAlt.cc' || echo '$(srcdir)/'`patNetworkGevAlt.cc

libbisonbiogeme_a-patNetworkGevAlt.obj: patNetworkGevAlt.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevAlt.obj `if test -f 'patNetworkGevAlt.cc'; then $(CYGPATH_W) 'patNetworkGevAlt.cc'; else $(CYGPATH_W) '$(srcdir)/patNetworkGevAlt.cc'; fi`

libbisonbiogeme_a-patNetworkGevIterator.o: patNetworkGevIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevIterator.o `test -f 'patNetworkGevIterator.cc' || echo '$(srcdir)/'`patNetworkGevIterator.cc

libbisonbiogeme_a-patNetworkGevIterator.obj: patNetworkGevIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevIterator.obj `if test -f 'patNetworkGevIterator.cc'; then $(CYGPATH_W) 'patNetworkGevIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patNetworkGevIterator.cc'; fi`

libbisonbiogeme_a-patNetworkGevModel.o: patNetworkGevModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevModel.o `test -f 'patNetworkGevModel.cc' || echo '$(srcdir)/'`patNetworkGevModel.cc

libbisonbiogeme_a-patNetworkGevModel.obj: patNetworkGevModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevModel.obj `if test -f 'patNetworkGevModel.cc'; then $(CYGPATH_W) 'patNetworkGevModel.cc'; else $(CYGPATH_W) '$(srcdir)/patNetworkGevModel.cc'; fi`

libbisonbiogeme_a-patNetworkGevNest.o: patNetworkGevNest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevNest.o `test -f 'patNetworkGevNest.cc' || echo '$(srcdir)/'`patNetworkGevNest.cc

libbisonbiogeme_a-patNetworkGevNest.obj: patNetworkGevNest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevNest.obj `if test -f 'patNetworkGevNest.cc'; then $(CYGPATH_W) 'patNetworkGevNest.cc'; else $(CYGPATH_W) '$(srcdir)/patNetworkGevNest.cc'; fi`

libbisonbiogeme_a-patNetworkGevNode.o: patNetworkGevNode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevNode.o `test -f 'patNetworkGevNode.cc' || echo '$(srcdir)/'`patNetworkGevNode.cc

libbisonbiogeme_a-patNetworkGevNode.obj: patNetworkGevNode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNetworkGevNode.obj `if test -f 'patNetworkGevNode.cc'; then $(CYGPATH_W) 'patNetworkGevNode.cc'; else $(CYGPATH_W) '$(srcdir)/patNetworkGevNode.cc'; fi`

libbisonbiogeme_a-patNlNestIterator.o: patNlNestIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNlNestIterator.o `test -f 'patNlNestIterator.cc' || echo '$(srcdir)/'`patNlNestIterator.cc

libbisonbiogeme_a-patNlNestIterator.obj: patNlNestIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNlNestIterator.obj `if test -f 'patNlNestIterator.cc'; then $(CYGPATH_W) 'patNlNestIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patNlNestIterator.cc'; fi`

libbisonbiogeme_a-patNonLinearConstraint.o: patNonLinearConstraint.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNonLinearConstraint.o `test -f 'patNonLinearConstraint.cc' || echo '$(srcdir)/'`patNonLinearConstraint.cc

libbisonbiogeme_a-patNonLinearConstraint.obj: patNonLinearConstraint.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patNonLinearConstraint.obj `if test -f 'patNonLinearConstraint.cc'; then $(CYGPATH_W) 'patNonLinearConstraint.cc'; else $(CYGPATH_W) '$(srcdir)/patNonLinearConstraint.cc'; fi`

libbisonbiogeme_a-patObservationData.o: patObservationData.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patObservationData.o `test -f 'patObservationData.cc' || echo '$(srcdir)/'`patObservationData.cc

libbisonbiogeme_a-patObservationData.obj: patObservationData.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patObservationData.obj `if test -f 'patObservationData.cc'; then $(CYGPATH_W) 'patObservationData.cc'; else $(CYGPATH_W) '$(srcdir)/patObservationData.cc'; fi`

libbisonbiogeme_a-patOneZhengFosgerau.o: patOneZhengFosgerau.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patOneZhengFosgerau.o `test -f 'patOneZhengFosgerau.cc' || echo '$(srcdir)/'`patOneZhengFosgerau.cc

libbisonbiogeme_a-patOneZhengFosgerau.obj: patOneZhengFosgerau.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patOneZhengFosgerau.obj `if test -f 'patOneZhengFosgerau.cc'; then $(CYGPATH_W) 'patOneZhengFosgerau.cc'; else $(CYGPATH_W) '$(srcdir)/patOneZhengFosgerau.cc'; fi`

libbisonbiogeme_a-patProbaGevModel.o: patProbaGevModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaGevModel.o `test -f 'patProbaGevModel.cc' || echo '$(srcdir)/'`patProbaGevModel.cc

libbisonbiogeme_a-patProbaGevModel.obj: patProbaGevModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaGevModel.obj `if test -f 'patProbaGevModel.cc'; then $(CYGPATH_W) 'patProbaGevModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaGevModel.cc'; fi`

libbisonbiogeme_a-patProbaGevPanelModel.o: patProbaGevPanelModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaGevPanelModel.o `test -f 'patProbaGevPanelModel.cc' || echo '$(srcdir)/'`patProbaGevPanelModel.cc

libbisonbiogeme_a-patProbaGevPanelModel.obj: patProbaGevPanelModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaGevPanelModel.obj `if test -f 'patProbaGevPanelModel.cc'; then $(CYGPATH_W) 'patProbaGevPanelModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaGevPanelModel.cc'; fi`

libbisonbiogeme_a-patProbaMnlModel.o: patProbaMnlModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaMnlModel.o `test -f 'patProbaMnlModel.cc' || echo '$(srcdir)/'`patProbaMnlModel.cc

libbisonbiogeme_a-patProbaMnlModel.obj: patProbaMnlModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaMnlModel.obj `if test -f 'patProbaMnlModel.cc'; then $(CYGPATH_W) 'patProbaMnlModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaMnlModel.cc'; fi`

libbisonbiogeme_a-patProbaMnlPanelModel.o: patProbaMnlPanelModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaMnlPanelModel.o `test -f 'patProbaMnlPanelModel.cc' || echo '$(srcdir)/'`patProbaMnlPanelModel.cc

libbisonbiogeme_a-patProbaMnlPanelModel.obj: patProbaMnlPanelModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaMnlPanelModel.obj `if test -f 'patProbaMnlPanelModel.cc'; then $(CYGPATH_W) 'patProbaMnlPanelModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaMnlPanelModel.cc'; fi`

libbisonbiogeme_a-patProbaModel.o: patProbaModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaModel.o `test -f 'patProbaModel.cc' || echo '$(srcdir)/'`patProbaModel.cc

libbisonbiogeme_a-patProbaModel.obj: patProbaModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaModel.obj `if test -f 'patProbaModel.cc'; then $(CYGPATH_W) 'patProbaModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaModel.cc'; fi`

libbisonbiogeme_a-patProbaOrdinalLogit.o: patProbaOrdinalLogit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaOrdinalLogit.o `test -f 'patProbaOrdinalLogit.cc' || echo '$(srcdir)/'`patProbaOrdinalLogit.cc

libbisonbiogeme_a-patProbaOrdinalLogit.obj: patProbaOrdinalLogit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaOrdinalLogit.obj `if test -f 'patProbaOrdinalLogit.cc'; then $(CYGPATH_W) 'patProbaOrdinalLogit.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaOrdinalLogit.cc'; fi`

libbisonbiogeme_a-patProbaPanelModel.o: patProbaPanelModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaPanelModel.o `test -f 'patProbaPanelModel.cc' || echo '$(srcdir)/'`patProbaPanelModel.cc

libbisonbiogeme_a-patProbaPanelModel.obj: patProbaPanelModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaPanelModel.obj `if test -f 'patProbaPanelModel.cc'; then $(CYGPATH_W) 'patProbaPanelModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaPanelModel.cc'; fi`

libbisonbiogeme_a-patProbaProbitModel.o: patProbaProbitModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaProbitModel.o `test -f 'patProbaProbitModel.cc' || echo '$(srcdir)/'`patProbaProbitModel.cc

libbisonbiogeme_a-patProbaProbitModel.obj: patProbaProbitModel.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patProbaProbitModel.obj `if test -f 'patProbaProbitModel.cc'; then $(CYGPATH_W) 'patProbaProbitModel.cc'; else $(CYGPATH_W) '$(srcdir)/patProbaProbitModel.cc'; fi`

libbisonbiogeme_a-patPythonResults.o: patPythonResults.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patPythonResults.o `test -f 'patPythonResults.cc' || echo '$(srcdir)/'`patPythonResults.cc

libbisonbiogeme_a-patPythonResults.obj: patPythonResults.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patPythonResults.obj `if test -f 'patPythonResults.cc'; then $(CYGPATH_W) 'patPythonResults.cc'; else $(CYGPATH_W) '$(srcdir)/patPythonResults.cc'; fi`

libbisonbiogeme_a-patRandomParameter.o: patRandomParameter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patRandomParameter.o `test -f 'patRandomParameter.cc' || echo '$(srcdir)/'`patRandomParameter.cc

libbisonbiogeme_a-patRandomParameter.obj: patRandomParameter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patRandomParameter.obj `if test -f 'patRandomParameter.cc'; then $(CYGPATH_W) 'patRandomParameter.cc'; else $(CYGPATH_W) '$(srcdir)/patRandomParameter.cc'; fi`

libbisonbiogeme_a-patSample.o: patSample.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSample.o `test -f 'patSample.cc' || echo '$(srcdir)/'`patSample.cc

libbisonbiogeme_a-patSample.obj: patSample.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSample.obj `if test -f 'patSample.cc'; then $(CYGPATH_W) 'patSample.cc'; else $(CYGPATH_W) '$(srcdir)/patSample.cc'; fi`

libbisonbiogeme_a-patSampleEnuGetIndices.o: patSampleEnuGetIndices.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSampleEnuGetIndices.o `test -f 'patSampleEnuGetIndices.cc' || echo '$(srcdir)/'`patSampleEnuGetIndices.cc

libbisonbiogeme_a-patSampleEnuGetIndices.obj: patSampleEnuGetIndices.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSampleEnuGetIndices.obj `if test -f 'patSampleEnuGetIndices.cc'; then $(CYGPATH_W) 'patSampleEnuGetIndices.cc'; else $(CYGPATH_W) '$(srcdir)/patSampleEnuGetIndices.cc'; fi`

libbisonbiogeme_a-patSampleEnumeration.o: patSampleEnumeration.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSampleEnumeration.o `test -f 'patSampleEnumeration.cc' || echo '$(srcdir)/'`patSampleEnumeration.cc

libbisonbiogeme_a-patSampleEnumeration.obj: patSampleEnumeration.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSampleEnumeration.obj `if test -f 'patSampleEnumeration.cc'; then $(CYGPATH_W) 'patSampleEnumeration.cc'; else $(CYGPATH_W) '$(srcdir)/patSampleEnumeration.cc'; fi`

libbisonbiogeme_a-patSecondDerivatives.o: patSecondDerivatives.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSecondDerivatives.o `test -f 'patSecondDerivatives.cc' || echo '$(srcdir)/'`patSecondDerivatives.cc

libbisonbiogeme_a-patSecondDerivatives.obj: patSecondDerivatives.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSecondDerivatives.obj `if test -f 'patSecondDerivatives.cc'; then $(CYGPATH_W) 'patSecondDerivatives.cc'; else $(CYGPATH_W) '$(srcdir)/patSecondDerivatives.cc'; fi`

libbisonbiogeme_a-patSimBasedMaxLikeOptimization.o: patSimBasedMaxLikeOptimization.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSimBasedMaxLikeOptimization.o `test -f 'patSimBasedMaxLikeOptimization.cc' || echo '$(srcdir)/'`patSimBasedMaxLikeOptimization.cc

libbisonbiogeme_a-patSimBasedMaxLikeOptimization.obj: patSimBasedMaxLikeOptimization.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patSimBasedMaxLikeOptimization.obj `if test -f 'patSimBasedMaxLikeOptimization.cc'; then $(CYGPATH_W) 'patSimBasedMaxLikeOptimization.cc'; else $(CYGPATH_W) '$(srcdir)/patSimBasedMaxLikeOptimization.cc'; fi`

libbisonbiogeme_a-patTestNormal.o: patTestNormal.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patTestNormal.o `test -f 'patTestNormal.cc' || echo '$(srcdir)/'`patTestNormal.cc

libbisonbiogeme_a-patTestNormal.obj: patTestNormal.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patTestNormal.obj `if test -f 'patTestNormal.cc'; then $(CYGPATH_W) 'patTestNormal.cc'; else $(CYGPATH_W) '$(srcdir)/patTestNormal.cc'; fi`

libbisonbiogeme_a-patUsedAttributeNamesIterator.o: patUsedAttributeNamesIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patUsedAttributeNamesIterator.o `test -f 'patUsedAttributeNamesIterator.cc' || echo '$(srcdir)/'`patUsedAttributeNamesIterator.cc

libbisonbiogeme_a-patUsedAttributeNamesIterator.obj: patUsedAttributeNamesIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patUsedAttributeNamesIterator.obj `if test -f 'patUsedAttributeNamesIterator.cc'; then $(CYGPATH_W) 'patUsedAttributeNamesIterator.cc'; else $(CYGPATH_W) '$(srcdir)/patUsedAttributeNamesIterator.cc'; fi`

libbisonbiogeme_a-patUtility.o: patUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patUtility.o `test -f 'patUtility.cc' || echo '$(srcdir)/'`patUtility.cc

libbisonbiogeme_a-patUtility.obj: patUtility.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patUtility.obj `if test -f 'patUtility.cc'; then $(CYGPATH_W) 'patUtility.cc'; else $(CYGPATH_W) '$(srcdir)/patUtility.cc'; fi`

libbisonbiogeme_a-patValueVariables.o: patValueVariables.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patValueVariables.o `test -f 'patValueVariables.cc' || echo '$(srcdir)/'`patValueVariables.cc

libbisonbiogeme_a-patValueVariables.obj: patValueVariables.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patValueVariables.obj `if test -f 'patValueVariables.cc'; then $(CYGPATH_W) 'patValueVariables.cc'; else $(CYGPATH_W) '$(srcdir)/patValueVariables.cc'; fi`

libbisonbiogeme_a-patZhengFosgerau.o: patZhengFosgerau.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patZhengFosgerau.o `test -f 'patZhengFosgerau.cc' || echo '$(srcdir)/'`patZhengFosgerau.cc

libbisonbiogeme_a-patZhengFosgerau.obj: patZhengFosgerau.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patZhengFosgerau.obj `if test -f 'patZhengFosgerau.cc'; then $(CYGPATH_W) 'patZhengFosgerau.cc'; else $(CYGPATH_W) '$(srcdir)/patZhengFosgerau.cc'; fi`

libbisonbiogeme_a-patZhengTest.o: patZhengTest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patZhengTest.o `test -f 'patZhengTest.cc' || echo '$(srcdir)/'`patZhengTest.cc

libbisonbiogeme_a-patZhengTest.obj: patZhengTest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_a_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_a-patZhengTest.obj `if test -f 'patZhengTest.cc'; then $(CYGPATH_W) 'patZhengTest.cc'; else $(CYGPATH_W) '$(srcdir)/patZhengTest.cc'; fi`

libbisonbiogeme_la-patSpecParser.lo: patSpecParser.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSpecParser.lo `test -f 'patSpecParser.cc' || echo '$(srcdir)/'`patSpecParser.cc

libbisonbiogeme_la-patSpecScanner.lo: patSpecScanner.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSpecScanner.lo `test -f 'patSpecScanner.cc' || echo '$(srcdir)/'`patSpecScanner.cc

libbisonbiogeme_la-patBisonSingletonFactory.lo: patBisonSingletonFactory.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patBisonSingletonFactory.lo `test -f 'patBisonSingletonFactory.cc' || echo '$(srcdir)/'`patBisonSingletonFactory.cc

libbisonbiogeme_la-patAdditiveUtility.lo: patAdditiveUtility.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patAdditiveUtility.lo `test -f 'patAdditiveUtility.cc' || echo '$(srcdir)/'`patAdditiveUtility.cc

libbisonbiogeme_la-patAggregateObservationData.lo: patAggregateObservationData.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patAggregateObservationData.lo `test -f 'patAggregateObservationData.cc' || echo '$(srcdir)/'`patAggregateObservationData.cc

libbisonbiogeme_la-patArithAbs.lo: patArithAbs.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithAbs.lo `test -f 'patArithAbs.cc' || echo '$(srcdir)/'`patArithAbs.cc

libbisonbiogeme_la-patArithAnd.lo: patArithAnd.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithAnd.lo `test -f 'patArithAnd.cc' || echo '$(srcdir)/'`patArithAnd.cc

libbisonbiogeme_la-patArithAttribute.lo: patArithAttribute.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithAttribute.lo `test -f 'patArithAttribute.cc' || echo '$(srcdir)/'`patArithAttribute.cc

libbisonbiogeme_la-patArithBinaryMinus.lo: patArithBinaryMinus.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithBinaryMinus.lo `test -f 'patArithBinaryMinus.cc' || echo '$(srcdir)/'`patArithBinaryMinus.cc

libbisonbiogeme_la-patArithBinaryPlus.lo: patArithBinaryPlus.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithBinaryPlus.lo `test -f 'patArithBinaryPlus.cc' || echo '$(srcdir)/'`patArithBinaryPlus.cc

libbisonbiogeme_la-patArithConstant.lo: patArithConstant.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithConstant.lo `test -f 'patArithConstant.cc' || echo '$(srcdir)/'`patArithConstant.cc

libbisonbiogeme_la-patArithDeriv.lo: patArithDeriv.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithDeriv.lo `test -f 'patArithDeriv.cc' || echo '$(srcdir)/'`patArithDeriv.cc

libbisonbiogeme_la-patArithDivide.lo: patArithDivide.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithDivide.lo `test -f 'patArithDivide.cc' || echo '$(srcdir)/'`patArithDivide.cc

libbisonbiogeme_la-patArithEqual.lo: patArithEqual.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithEqual.lo `test -f 'patArithEqual.cc' || echo '$(srcdir)/'`patArithEqual.cc

libbisonbiogeme_la-patArithExp.lo: patArithExp.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithExp.lo `test -f 'patArithExp.cc' || echo '$(srcdir)/'`patArithExp.cc

libbisonbiogeme_la-patArithGreater.lo: patArithGreater.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithGreater.lo `test -f 'patArithGreater.cc' || echo '$(srcdir)/'`patArithGreater.cc

libbisonbiogeme_la-patArithGreaterEqual.lo: patArithGreaterEqual.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithGreaterEqual.lo `test -f 'patArithGreaterEqual.cc' || echo '$(srcdir)/'`patArithGreaterEqual.cc

libbisonbiogeme_la-patArithInt.lo: patArithInt.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithInt.lo `test -f 'patArithInt.cc' || echo '$(srcdir)/'`patArithInt.cc

libbisonbiogeme_la-patArithLess.lo: patArithLess.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithLess.lo `test -f 'patArithLess.cc' || echo '$(srcdir)/'`patArithLess.cc

libbisonbiogeme_la-patArithLessEqual.lo: patArithLessEqual.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithLessEqual.lo `test -f 'patArithLessEqual.cc' || echo '$(srcdir)/'`patArithLessEqual.cc

libbisonbiogeme_la-patArithLog.lo: patArithLog.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithLog.lo `test -f 'patArithLog.cc' || echo '$(srcdir)/'`patArithLog.cc

libbisonbiogeme_la-patArithMax.lo: patArithMax.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithMax.lo `test -f 'patArithMax.cc' || echo '$(srcdir)/'`patArithMax.cc

libbisonbiogeme_la-patArithMin.lo: patArithMin.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithMin.lo `test -f 'patArithMin.cc' || echo '$(srcdir)/'`patArithMin.cc

libbisonbiogeme_la-patArithMod.lo: patArithMod.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithMod.lo `test -f 'patArithMod.cc' || echo '$(srcdir)/'`patArithMod.cc

libbisonbiogeme_la-patArithMult.lo: patArithMult.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithMult.lo `test -f 'patArithMult.cc' || echo '$(srcdir)/'`patArithMult.cc

libbisonbiogeme_la-patArithNode.lo: patArithNode.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithNode.lo `test -f 'patArithNode.cc' || echo '$(srcdir)/'`patArithNode.cc

libbisonbiogeme_la-patArithNormalRandom.lo: patArithNormalRandom.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithNormalRandom.lo `test -f 'patArithNormalRandom.cc' || echo '$(srcdir)/'`patArithNormalRandom.cc

libbisonbiogeme_la-patArithNot.lo: patArithNot.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithNot.lo `test -f 'patArithNot.cc' || echo '$(srcdir)/'`patArithNot.cc

libbisonbiogeme_la-patArithNotEqual.lo: patArithNotEqual.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithNotEqual.lo `test -f 'patArithNotEqual.cc' || echo '$(srcdir)/'`patArithNotEqual.cc

libbisonbiogeme_la-patArithOr.lo: patArithOr.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithOr.lo `test -f 'patArithOr.cc' || echo '$(srcdir)/'`patArithOr.cc

libbisonbiogeme_la-patArithPower.lo: patArithPower.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithPower.lo `test -f 'patArithPower.cc' || echo '$(srcdir)/'`patArithPower.cc

libbisonbiogeme_la-patArithRandom.lo: patArithRandom.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithRandom.lo `test -f 'patArithRandom.cc' || echo '$(srcdir)/'`patArithRandom.cc

libbisonbiogeme_la-patArithSqrt.lo: patArithSqrt.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithSqrt.lo `test -f 'patArithSqrt.cc' || echo '$(srcdir)/'`patArithSqrt.cc

libbisonbiogeme_la-patArithUnaryMinus.lo: patArithUnaryMinus.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithUnaryMinus.lo `test -f 'patArithUnaryMinus.cc' || echo '$(srcdir)/'`patArithUnaryMinus.cc

libbisonbiogeme_la-patArithUnifRandom.lo: patArithUnifRandom.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithUnifRandom.lo `test -f 'patArithUnifRandom.cc' || echo '$(srcdir)/'`patArithUnifRandom.cc

libbisonbiogeme_la-patArithVariable.lo: patArithVariable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArithVariable.lo `test -f 'patArithVariable.cc' || echo '$(srcdir)/'`patArithVariable.cc

libbisonbiogeme_la-patArrayIterator.lo: patArrayIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patArrayIterator.lo `test -f 'patArrayIterator.cc' || echo '$(srcdir)/'`patArrayIterator.cc

libbisonbiogeme_la-patAttributeNamesIterator.lo: patAttributeNamesIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patAttributeNamesIterator.lo `test -f 'patAttributeNamesIterator.cc' || echo '$(srcdir)/'`patAttributeNamesIterator.cc

libbisonbiogeme_la-patBetaLikeIterator.lo: patBetaLikeIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patBetaLikeIterator.lo `test -f 'patBetaLikeIterator.cc' || echo '$(srcdir)/'`patBetaLikeIterator.cc

libbisonbiogeme_la-patBetaLikeParameter.lo: patBetaLikeParameter.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patBetaLikeParameter.lo `test -f 'patBetaLikeParameter.cc' || echo '$(srcdir)/'`patBetaLikeParameter.cc

libbisonbiogeme_la-patBiogeme.lo: patBiogeme.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patBiogeme.lo `test -f 'patBiogeme.cc' || echo '$(srcdir)/'`patBiogeme.cc

libbisonbiogeme_la-patBiogemeIterationBackup.lo: patBiogemeIterationBackup.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patBiogemeIterationBackup.lo `test -f 'patBiogemeIterationBackup.cc' || echo '$(srcdir)/'`patBiogemeIterationBackup.cc

libbisonbiogeme_la-patBiogemeScripting.lo: patBiogemeScripting.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patBiogemeScripting.lo `test -f 'patBiogemeScripting.cc' || echo '$(srcdir)/'`patBiogemeScripting.cc

libbisonbiogeme_la-patCNL.lo: patCNL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patCNL.lo `test -f 'patCNL.cc' || echo '$(srcdir)/'`patCNL.cc

libbisonbiogeme_la-patCnlAlphaIterator.lo: patCnlAlphaIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patCnlAlphaIterator.lo `test -f 'patCnlAlphaIterator.cc' || echo '$(srcdir)/'`patCnlAlphaIterator.cc

libbisonbiogeme_la-patConstraintNestIterator.lo: patConstraintNestIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patConstraintNestIterator.lo `test -f 'patConstraintNestIterator.cc' || echo '$(srcdir)/'`patConstraintNestIterator.cc

libbisonbiogeme_la-patDataFile.lo: patDataFile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDataFile.lo `test -f 'patDataFile.cc' || echo '$(srcdir)/'`patDataFile.cc

libbisonbiogeme_la-patDataFileAggObsIterator.lo: patDataFileAggObsIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDataFileAggObsIterator.lo `test -f 'patDataFileAggObsIterator.cc' || echo '$(srcdir)/'`patDataFileAggObsIterator.cc

libbisonbiogeme_la-patDataFileIndIterator.lo: patDataFileIndIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDataFileIndIterator.lo `test -f 'patDataFileIndIterator.cc' || echo '$(srcdir)/'`patDataFileIndIterator.cc

libbisonbiogeme_la-patDataFileObsIterator.lo: patDataFileObsIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDataFileObsIterator.lo `test -f 'patDataFileObsIterator.cc' || echo '$(srcdir)/'`patDataFileObsIterator.cc

libbisonbiogeme_la-patDataMemory.lo: patDataMemory.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDataMemory.lo `test -f 'patDataMemory.cc' || echo '$(srcdir)/'`patDataMemory.cc

libbisonbiogeme_la-patDiscreteParameterIterator.lo: patDiscreteParameterIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDiscreteParameterIterator.lo `test -f 'patDiscreteParameterIterator.cc' || echo '$(srcdir)/'`patDiscreteParameterIterator.cc

libbisonbiogeme_la-patDiscreteParameterProba.lo: patDiscreteParameterProba.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patDiscreteParameterProba.lo `test -f 'patDiscreteParameterProba.cc' || echo '$(srcdir)/'`patDiscreteParameterProba.cc

libbisonbiogeme_la-patEstimationResult.lo: patEstimationResult.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patEstimationResult.lo `test -f 'patEstimationResult.cc' || echo '$(srcdir)/'`patEstimationResult.cc

libbisonbiogeme_la-patFastBiogeme.lo: patFastBiogeme.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patFastBiogeme.lo `test -f 'patFastBiogeme.cc' || echo '$(srcdir)/'`patFastBiogeme.cc

libbisonbiogeme_la-patFileIterator.lo: patFileIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patFileIterator.lo `test -f 'patFileIterator.cc' || echo '$(srcdir)/'`patFileIterator.cc

libbisonbiogeme_la-patFullCnlAlphaIterator.lo: patFullCnlAlphaIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patFullCnlAlphaIterator.lo `test -f 'patFullCnlAlphaIterator.cc' || echo '$(srcdir)/'`patFullCnlAlphaIterator.cc

libbisonbiogeme_la-patGEV.lo: patGEV.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patGEV.lo `test -f 'patGEV.cc' || echo '$(srcdir)/'`patGEV.cc

libbisonbiogeme_la-patGeneralizedUtility.lo: patGeneralizedUtility.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patGeneralizedUtility.lo `test -f 'patGeneralizedUtility.cc' || echo '$(srcdir)/'`patGeneralizedUtility.cc

libbisonbiogeme_la-patIndividualData.lo: patIndividualData.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patIndividualData.lo `test -f 'patIndividualData.cc' || echo '$(srcdir)/'`patIndividualData.cc

libbisonbiogeme_la-patLegendre.lo: patLegendre.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patLegendre.lo `test -f 'patLegendre.cc' || echo '$(srcdir)/'`patLegendre.cc

libbisonbiogeme_la-patLikelihood.lo: patLikelihood.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patLikelihood.lo `test -f 'patLikelihood.cc' || echo '$(srcdir)/'`patLikelihood.cc

libbisonbiogeme_la-patLinearConstraint.lo: patLinearConstraint.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patLinearConstraint.lo `test -f 'patLinearConstraint.cc' || echo '$(srcdir)/'`patLinearConstraint.cc

libbisonbiogeme_la-patLinearUtility.lo: patLinearUtility.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patLinearUtility.lo `test -f 'patLinearUtility.cc' || echo '$(srcdir)/'`patLinearUtility.cc

libbisonbiogeme_la-patMaxLikeProblem.lo: patMaxLikeProblem.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patMaxLikeProblem.lo `test -f 'patMaxLikeProblem.cc' || echo '$(srcdir)/'`patMaxLikeProblem.cc

libbisonbiogeme_la-patMemoryObsNoPanelIterator.lo: patMemoryObsNoPanelIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patMemoryObsNoPanelIterator.lo `test -f 'patMemoryObsNoPanelIterator.cc' || echo '$(srcdir)/'`patMemoryObsNoPanelIterator.cc

libbisonbiogeme_la-patMemoryObservationIterator.lo: patMemoryObservationIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patMemoryObservationIterator.lo `test -f 'patMemoryObservationIterator.cc' || echo '$(srcdir)/'`patMemoryObservationIterator.cc

libbisonbiogeme_la-patMinimizedFunction.lo: patMinimizedFunction.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patMinimizedFunction.lo `test -f 'patMinimizedFunction.cc' || echo '$(srcdir)/'`patMinimizedFunction.cc

libbisonbiogeme_la-patModelSpec.lo: patModelSpec.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patModelSpec.lo `test -f 'patModelSpec.cc' || echo '$(srcdir)/'`patModelSpec.cc

libbisonbiogeme_la-patModelSpecCtd.lo: patModelSpecCtd.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patModelSpecCtd.lo `test -f 'patModelSpecCtd.cc' || echo '$(srcdir)/'`patModelSpecCtd.cc

libbisonbiogeme_la-patNL.lo: patNL.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNL.lo `test -f 'patNL.cc' || echo '$(srcdir)/'`patNL.cc

libbisonbiogeme_la-patNetworkAlphaIterator.lo: patNetworkAlphaIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNetworkAlphaIterator.lo `test -f 'patNetworkAlphaIterator.cc' || echo '$(srcdir)/'`patNetworkAlphaIterator.cc

libbisonbiogeme_la-patNetworkGevAlt.lo: patNetworkGevAlt.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNetworkGevAlt.lo `test -f 'patNetworkGevAlt.cc' || echo '$(srcdir)/'`patNetworkGevAlt.cc

libbisonbiogeme_la-patNetworkGevIterator.lo: patNetworkGevIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNetworkGevIterator.lo `test -f 'patNetworkGevIterator.cc' || echo '$(srcdir)/'`patNetworkGevIterator.cc

libbisonbiogeme_la-patNetworkGevModel.lo: patNetworkGevModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNetworkGevModel.lo `test -f 'patNetworkGevModel.cc' || echo '$(srcdir)/'`patNetworkGevModel.cc

libbisonbiogeme_la-patNetworkGevNest.lo: patNetworkGevNest.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNetworkGevNest.lo `test -f 'patNetworkGevNest.cc' || echo '$(srcdir)/'`patNetworkGevNest.cc

libbisonbiogeme_la-patNetworkGevNode.lo: patNetworkGevNode.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNetworkGevNode.lo `test -f 'patNetworkGevNode.cc' || echo '$(srcdir)/'`patNetworkGevNode.cc

libbisonbiogeme_la-patNlNestIterator.lo: patNlNestIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNlNestIterator.lo `test -f 'patNlNestIterator.cc' || echo '$(srcdir)/'`patNlNestIterator.cc

libbisonbiogeme_la-patNonLinearConstraint.lo: patNonLinearConstraint.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patNonLinearConstraint.lo `test -f 'patNonLinearConstraint.cc' || echo '$(srcdir)/'`patNonLinearConstraint.cc

libbisonbiogeme_la-patObservationData.lo: patObservationData.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patObservationData.lo `test -f 'patObservationData.cc' || echo '$(srcdir)/'`patObservationData.cc

libbisonbiogeme_la-patOneZhengFosgerau.lo: patOneZhengFosgerau.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patOneZhengFosgerau.lo `test -f 'patOneZhengFosgerau.cc' || echo '$(srcdir)/'`patOneZhengFosgerau.cc

libbisonbiogeme_la-patProbaGevModel.lo: patProbaGevModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaGevModel.lo `test -f 'patProbaGevModel.cc' || echo '$(srcdir)/'`patProbaGevModel.cc

libbisonbiogeme_la-patProbaGevPanelModel.lo: patProbaGevPanelModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaGevPanelModel.lo `test -f 'patProbaGevPanelModel.cc' || echo '$(srcdir)/'`patProbaGevPanelModel.cc

libbisonbiogeme_la-patProbaMnlModel.lo: patProbaMnlModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaMnlModel.lo `test -f 'patProbaMnlModel.cc' || echo '$(srcdir)/'`patProbaMnlModel.cc

libbisonbiogeme_la-patProbaMnlPanelModel.lo: patProbaMnlPanelModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaMnlPanelModel.lo `test -f 'patProbaMnlPanelModel.cc' || echo '$(srcdir)/'`patProbaMnlPanelModel.cc

libbisonbiogeme_la-patProbaModel.lo: patProbaModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaModel.lo `test -f 'patProbaModel.cc' || echo '$(srcdir)/'`patProbaModel.cc

libbisonbiogeme_la-patProbaOrdinalLogit.lo: patProbaOrdinalLogit.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaOrdinalLogit.lo `test -f 'patProbaOrdinalLogit.cc' || echo '$(srcdir)/'`patProbaOrdinalLogit.cc

libbisonbiogeme_la-patProbaPanelModel.lo: patProbaPanelModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaPanelModel.lo `test -f 'patProbaPanelModel.cc' || echo '$(srcdir)/'`patProbaPanelModel.cc

libbisonbiogeme_la-patProbaProbitModel.lo: patProbaProbitModel.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patProbaProbitModel.lo `test -f 'patProbaProbitModel.cc' || echo '$(srcdir)/'`patProbaProbitModel.cc

libbisonbiogeme_la-patPythonResults.lo: patPythonResults.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patPythonResults.lo `test -f 'patPythonResults.cc' || echo '$(srcdir)/'`patPythonResults.cc

libbisonbiogeme_la-patRandomParameter.lo: patRandomParameter.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patRandomParameter.lo `test -f 'patRandomParameter.cc' || echo '$(srcdir)/'`patRandomParameter.cc

libbisonbiogeme_la-patSample.lo: patSample.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSample.lo `test -f 'patSample.cc' || echo '$(srcdir)/'`patSample.cc

libbisonbiogeme_la-patSampleEnuGetIndices.lo: patSampleEnuGetIndices.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSampleEnuGetIndices.lo `test -f 'patSampleEnuGetIndices.cc' || echo '$(srcdir)/'`patSampleEnuGetIndices.cc

libbisonbiogeme_la-patSampleEnumeration.lo: patSampleEnumeration.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSampleEnumeration.lo `test -f 'patSampleEnumeration.cc' || echo '$(srcdir)/'`patSampleEnumeration.cc

libbisonbiogeme_la-patSecondDerivatives.lo: patSecondDerivatives.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSecondDerivatives.lo `test -f 'patSecondDerivatives.cc' || echo '$(srcdir)/'`patSecondDerivatives.cc

libbisonbiogeme_la-patSimBasedMaxLikeOptimization.lo: patSimBasedMaxLikeOptimization.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patSimBasedMaxLikeOptimization.lo `test -f 'patSimBasedMaxLikeOptimization.cc' || echo '$(srcdir)/'`patSimBasedMaxLikeOptimization.cc

libbisonbiogeme_la-patTestNormal.lo: patTestNormal.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patTestNormal.lo `test -f 'patTestNormal.cc' || echo '$(srcdir)/'`patTestNormal.cc

libbisonbiogeme_la-patUsedAttributeNamesIterator.lo: patUsedAttributeNamesIterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patUsedAttributeNamesIterator.lo `test -f 'patUsedAttributeNamesIterator.cc' || echo '$(srcdir)/'`patUsedAttributeNamesIterator.cc

libbisonbiogeme_la-patUtility.lo: patUtility.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patUtility.lo `test -f 'patUtility.cc' || echo '$(srcdir)/'`patUtility.cc

libbisonbiogeme_la-patValueVariables.lo: patValueVariables.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patValueVariables.lo `test -f 'patValueVariables.cc' || echo '$(srcdir)/'`patValueVariables.cc

libbisonbiogeme_la-patZhengFosgerau.lo: patZhengFosgerau.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patZhengFosgerau.lo `test -f 'patZhengFosgerau.cc' || echo '$(srcdir)/'`patZhengFosgerau.cc

libbisonbiogeme_la-patZhengTest.lo: patZhengTest.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbisonbiogeme_la_CXXFLAGS) $(CXXFLAGS) -c -o libbisonbiogeme_la-patZhengTest.lo `test -f 'patZhengTest.cc' || echo '$(srcdir)/'`patZhengTest.cc

.ll.cc:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f patSpecParser.cc
	-rm -f patSpecParser.hh
	-rm -f patSpecScanner.cc
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
