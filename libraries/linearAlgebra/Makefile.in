# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile.am
# linearAlgebra


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = libraries/linearAlgebra
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
liblinearAlgebra_a_AR = $(AR) $(ARFLAGS)
liblinearAlgebra_a_LIBADD =
am__liblinearAlgebra_a_SOURCES_DIST = patEigenVectors.cc \
	patGeneralizedInverseIteration.cc patHouseholder.cc \
	patHybridMatrix.cc patInverse.cc patInverseIteration.cc \
	patLu.cc patMatrix.cc patMyMatrix.cc patPythag.cc patQR.cc \
	patSvd.cc patKalman.cc patEigenVectors.h \
	patGeneralizedInverseIteration.h patHouseholder.h \
	patHybridMatrix.h patInverse.h patInverseIteration.h patLu.h \
	patMatrix.h patMyMatrix.h patNrSgn.h patPythag.h patQR.h \
	patSvd.h patKalman.h
am__objects_1 = liblinearAlgebra_a-patEigenVectors.$(OBJEXT) \
	liblinearAlgebra_a-patGeneralizedInverseIteration.$(OBJEXT) \
	liblinearAlgebra_a-patHouseholder.$(OBJEXT) \
	liblinearAlgebra_a-patHybridMatrix.$(OBJEXT) \
	liblinearAlgebra_a-patInverse.$(OBJEXT) \
	liblinearAlgebra_a-patInverseIteration.$(OBJEXT) \
	liblinearAlgebra_a-patLu.$(OBJEXT) \
	liblinearAlgebra_a-patMatrix.$(OBJEXT) \
	liblinearAlgebra_a-patMyMatrix.$(OBJEXT) \
	liblinearAlgebra_a-patPythag.$(OBJEXT) \
	liblinearAlgebra_a-patQR.$(OBJEXT) \
	liblinearAlgebra_a-patSvd.$(OBJEXT) \
	liblinearAlgebra_a-patKalman.$(OBJEXT)
@BUILD_STATIC_TRUE@am_liblinearAlgebra_a_OBJECTS = $(am__objects_1)
liblinearAlgebra_a_OBJECTS = $(am_liblinearAlgebra_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
liblinearAlgebra_la_LIBADD =
am_liblinearAlgebra_la_OBJECTS =  \
	liblinearAlgebra_la-patEigenVectors.lo \
	liblinearAlgebra_la-patGeneralizedInverseIteration.lo \
	liblinearAlgebra_la-patHouseholder.lo \
	liblinearAlgebra_la-patHybridMatrix.lo \
	liblinearAlgebra_la-patInverse.lo \
	liblinearAlgebra_la-patInverseIteration.lo \
	liblinearAlgebra_la-patLu.lo liblinearAlgebra_la-patMatrix.lo \
	liblinearAlgebra_la-patMyMatrix.lo \
	liblinearAlgebra_la-patPythag.lo liblinearAlgebra_la-patQR.lo \
	liblinearAlgebra_la-patSvd.lo liblinearAlgebra_la-patKalman.lo
liblinearAlgebra_la_OBJECTS = $(am_liblinearAlgebra_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
liblinearAlgebra_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liblinearAlgebra_a_SOURCES) $(liblinearAlgebra_la_SOURCES)
DIST_SOURCES = $(am__liblinearAlgebra_a_SOURCES_DIST) \
	$(liblinearAlgebra_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BISON = @BISON@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FLEX = @FLEX@
GREP = @GREP@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_CXXFLAGS = @GTK_CXXFLAGS@
GTK_LDFLAGS = @GTK_LDFLAGS@
GTK_LIBS = @GTK_LIBS@
GTK_STATIC_CXXFLAGS = @GTK_STATIC_CXXFLAGS@
GTK_STATIC_LDFLAGS = @GTK_STATIC_LDFLAGS@
HAVE_RSCRIPT = @HAVE_RSCRIPT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_RELEASE = @INSTALL_RELEASE@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTALL_VERSION_SUFFIX = @INSTALL_VERSION_SUFFIX@
IPOPT_CFLAGS = @IPOPT_CFLAGS@
IPOPT_CXXFLAGS = @IPOPT_CXXFLAGS@
IPOPT_LDFLAGS = @IPOPT_LDFLAGS@
IPOPT_LIBS = @IPOPT_LIBS@
IPOPT_STATIC_CXXFLAGS = @IPOPT_STATIC_CXXFLAGS@
IPOPT_STATIC_LDFLAGS = @IPOPT_STATIC_LDFLAGS@
LATEXMK = @LATEXMK@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLDB = @LLDB@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PBS = @PBS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PYTHONBIN = @PYTHONBIN@
PYTHON_CXXFLAGS = @PYTHON_CXXFLAGS@
PYTHON_INCLUDES = @PYTHON_INCLUDES@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_LIBS = @PYTHON_LIBS@
RANLIB = @RANLIB@
R_CXXFLAGS = @R_CXXFLAGS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4
AM_CPPFLAGS = -I$(top_srcdir)/libraries/utils
noinst_LTLIBRARIES = liblinearAlgebra.la
liblinearAlgebra_la_CXXFLAGS = $(AM_CXXFLAGS)
@BUILD_STATIC_TRUE@noinst_LIBRARIES = liblinearAlgebra.a
@BUILD_STATIC_TRUE@liblinearAlgebra_a_SOURCES = $(liblinearAlgebra_la_SOURCES)
@BUILD_STATIC_TRUE@liblinearAlgebra_a_CXXFLAGS = $(AM_CXXFLAGS)
liblinearAlgebra_la_SOURCES = \
patEigenVectors.cc \
patGeneralizedInverseIteration.cc \
patHouseholder.cc \
patHybridMatrix.cc \
patInverse.cc \
patInverseIteration.cc \
patLu.cc \
patMatrix.cc \
patMyMatrix.cc \
patPythag.cc \
patQR.cc \
patSvd.cc \
patKalman.cc \
patEigenVectors.h \
patGeneralizedInverseIteration.h \
patHouseholder.h \
patHybridMatrix.h \
patInverse.h \
patInverseIteration.h \
patLu.h \
patMatrix.h \
patMyMatrix.h \
patNrSgn.h \
patPythag.h \
patQR.h \
patSvd.h \
patKalman.h 

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps libraries/linearAlgebra/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps libraries/linearAlgebra/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

liblinearAlgebra.a: $(liblinearAlgebra_a_OBJECTS) $(liblinearAlgebra_a_DEPENDENCIES) $(EXTRA_liblinearAlgebra_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f liblinearAlgebra.a
	$(AM_V_AR)$(liblinearAlgebra_a_AR) liblinearAlgebra.a $(liblinearAlgebra_a_OBJECTS) $(liblinearAlgebra_a_LIBADD)
	$(AM_V_at)$(RANLIB) liblinearAlgebra.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

liblinearAlgebra.la: $(liblinearAlgebra_la_OBJECTS) $(liblinearAlgebra_la_DEPENDENCIES) $(EXTRA_liblinearAlgebra_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(liblinearAlgebra_la_LINK)  $(liblinearAlgebra_la_OBJECTS) $(liblinearAlgebra_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

liblinearAlgebra_a-patEigenVectors.o: patEigenVectors.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patEigenVectors.o `test -f 'patEigenVectors.cc' || echo '$(srcdir)/'`patEigenVectors.cc

liblinearAlgebra_a-patEigenVectors.obj: patEigenVectors.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patEigenVectors.obj `if test -f 'patEigenVectors.cc'; then $(CYGPATH_W) 'patEigenVectors.cc'; else $(CYGPATH_W) '$(srcdir)/patEigenVectors.cc'; fi`

liblinearAlgebra_a-patGeneralizedInverseIteration.o: patGeneralizedInverseIteration.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patGeneralizedInverseIteration.o `test -f 'patGeneralizedInverseIteration.cc' || echo '$(srcdir)/'`patGeneralizedInverseIteration.cc

liblinearAlgebra_a-patGeneralizedInverseIteration.obj: patGeneralizedInverseIteration.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patGeneralizedInverseIteration.obj `if test -f 'patGeneralizedInverseIteration.cc'; then $(CYGPATH_W) 'patGeneralizedInverseIteration.cc'; else $(CYGPATH_W) '$(srcdir)/patGeneralizedInverseIteration.cc'; fi`

liblinearAlgebra_a-patHouseholder.o: patHouseholder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patHouseholder.o `test -f 'patHouseholder.cc' || echo '$(srcdir)/'`patHouseholder.cc

liblinearAlgebra_a-patHouseholder.obj: patHouseholder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patHouseholder.obj `if test -f 'patHouseholder.cc'; then $(CYGPATH_W) 'patHouseholder.cc'; else $(CYGPATH_W) '$(srcdir)/patHouseholder.cc'; fi`

liblinearAlgebra_a-patHybridMatrix.o: patHybridMatrix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patHybridMatrix.o `test -f 'patHybridMatrix.cc' || echo '$(srcdir)/'`patHybridMatrix.cc

liblinearAlgebra_a-patHybridMatrix.obj: patHybridMatrix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patHybridMatrix.obj `if test -f 'patHybridMatrix.cc'; then $(CYGPATH_W) 'patHybridMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/patHybridMatrix.cc'; fi`

liblinearAlgebra_a-patInverse.o: patInverse.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patInverse.o `test -f 'patInverse.cc' || echo '$(srcdir)/'`patInverse.cc

liblinearAlgebra_a-patInverse.obj: patInverse.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patInverse.obj `if test -f 'patInverse.cc'; then $(CYGPATH_W) 'patInverse.cc'; else $(CYGPATH_W) '$(srcdir)/patInverse.cc'; fi`

liblinearAlgebra_a-patInverseIteration.o: patInverseIteration.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patInverseIteration.o `test -f 'patInverseIteration.cc' || echo '$(srcdir)/'`patInverseIteration.cc

liblinearAlgebra_a-patInverseIteration.obj: patInverseIteration.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patInverseIteration.obj `if test -f 'patInverseIteration.cc'; then $(CYGPATH_W) 'patInverseIteration.cc'; else $(CYGPATH_W) '$(srcdir)/patInverseIteration.cc'; fi`

liblinearAlgebra_a-patLu.o: patLu.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patLu.o `test -f 'patLu.cc' || echo '$(srcdir)/'`patLu.cc

liblinearAlgebra_a-patLu.obj: patLu.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patLu.obj `if test -f 'patLu.cc'; then $(CYGPATH_W) 'patLu.cc'; else $(CYGPATH_W) '$(srcdir)/patLu.cc'; fi`

liblinearAlgebra_a-patMatrix.o: patMatrix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patMatrix.o `test -f 'patMatrix.cc' || echo '$(srcdir)/'`patMatrix.cc

liblinearAlgebra_a-patMatrix.obj: patMatrix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patMatrix.obj `if test -f 'patMatrix.cc'; then $(CYGPATH_W) 'patMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/patMatrix.cc'; fi`

liblinearAlgebra_a-patMyMatrix.o: patMyMatrix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patMyMatrix.o `test -f 'patMyMatrix.cc' || echo '$(srcdir)/'`patMyMatrix.cc

liblinearAlgebra_a-patMyMatrix.obj: patMyMatrix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patMyMatrix.obj `if test -f 'patMyMatrix.cc'; then $(CYGPATH_W) 'patMyMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/patMyMatrix.cc'; fi`

liblinearAlgebra_a-patPythag.o: patPythag.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patPythag.o `test -f 'patPythag.cc' || echo '$(srcdir)/'`patPythag.cc

liblinearAlgebra_a-patPythag.obj: patPythag.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patPythag.obj `if test -f 'patPythag.cc'; then $(CYGPATH_W) 'patPythag.cc'; else $(CYGPATH_W) '$(srcdir)/patPythag.cc'; fi`

liblinearAlgebra_a-patQR.o: patQR.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patQR.o `test -f 'patQR.cc' || echo '$(srcdir)/'`patQR.cc

liblinearAlgebra_a-patQR.obj: patQR.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patQR.obj `if test -f 'patQR.cc'; then $(CYGPATH_W) 'patQR.cc'; else $(CYGPATH_W) '$(srcdir)/patQR.cc'; fi`

liblinearAlgebra_a-patSvd.o: patSvd.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patSvd.o `test -f 'patSvd.cc' || echo '$(srcdir)/'`patSvd.cc

liblinearAlgebra_a-patSvd.obj: patSvd.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patSvd.obj `if test -f 'patSvd.cc'; then $(CYGPATH_W) 'patSvd.cc'; else $(CYGPATH_W) '$(srcdir)/patSvd.cc'; fi`

liblinearAlgebra_a-patKalman.o: patKalman.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patKalman.o `test -f 'patKalman.cc' || echo '$(srcdir)/'`patKalman.cc

liblinearAlgebra_a-patKalman.obj: patKalman.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_a_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_a-patKalman.obj `if test -f 'patKalman.cc'; then $(CYGPATH_W) 'patKalman.cc'; else $(CYGPATH_W) '$(srcdir)/patKalman.cc'; fi`

liblinearAlgebra_la-patEigenVectors.lo: patEigenVectors.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patEigenVectors.lo `test -f 'patEigenVectors.cc' || echo '$(srcdir)/'`patEigenVectors.cc

liblinearAlgebra_la-patGeneralizedInverseIteration.lo: patGeneralizedInverseIteration.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patGeneralizedInverseIteration.lo `test -f 'patGeneralizedInverseIteration.cc' || echo '$(srcdir)/'`patGeneralizedInverseIteration.cc

liblinearAlgebra_la-patHouseholder.lo: patHouseholder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patHouseholder.lo `test -f 'patHouseholder.cc' || echo '$(srcdir)/'`patHouseholder.cc

liblinearAlgebra_la-patHybridMatrix.lo: patHybridMatrix.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patHybridMatrix.lo `test -f 'patHybridMatrix.cc' || echo '$(srcdir)/'`patHybridMatrix.cc

liblinearAlgebra_la-patInverse.lo: patInverse.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patInverse.lo `test -f 'patInverse.cc' || echo '$(srcdir)/'`patInverse.cc

liblinearAlgebra_la-patInverseIteration.lo: patInverseIteration.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patInverseIteration.lo `test -f 'patInverseIteration.cc' || echo '$(srcdir)/'`patInverseIteration.cc

liblinearAlgebra_la-patLu.lo: patLu.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patLu.lo `test -f 'patLu.cc' || echo '$(srcdir)/'`patLu.cc

liblinearAlgebra_la-patMatrix.lo: patMatrix.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patMatrix.lo `test -f 'patMatrix.cc' || echo '$(srcdir)/'`patMatrix.cc

liblinearAlgebra_la-patMyMatrix.lo: patMyMatrix.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patMyMatrix.lo `test -f 'patMyMatrix.cc' || echo '$(srcdir)/'`patMyMatrix.cc

liblinearAlgebra_la-patPythag.lo: patPythag.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patPythag.lo `test -f 'patPythag.cc' || echo '$(srcdir)/'`patPythag.cc

liblinearAlgebra_la-patQR.lo: patQR.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patQR.lo `test -f 'patQR.cc' || echo '$(srcdir)/'`patQR.cc

liblinearAlgebra_la-patSvd.lo: patSvd.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patSvd.lo `test -f 'patSvd.cc' || echo '$(srcdir)/'`patSvd.cc

liblinearAlgebra_la-patKalman.lo: patKalman.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblinearAlgebra_la_CXXFLAGS) $(CXXFLAGS) -c -o liblinearAlgebra_la-patKalman.lo `test -f 'patKalman.cc' || echo '$(srcdir)/'`patKalman.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
